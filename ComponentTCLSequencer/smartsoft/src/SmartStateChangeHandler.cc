//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "SmartStateChangeHandler.hh"
#include "ComponentTCLSequencer.hh"

#include <iostream>

// Called when a substate is entered
void SmartStateChangeHandler::handleEnterState(const std::string & substate) throw()
{
	// change this code to your needs !!!

	if(substate == "shutdown"){
		std::cout<<__FUNCTION__<<substate<<std::endl;


		std::ostringstream eventResult;
		eventResult<< "(";
		eventResult<< "( coordination-interfaces-type . \"COMPONENT\")";
		eventResult<< "( coordination-interface-instance . \"COMPONENT.COMPONENT\")";
		eventResult<< "( service-name . \"SHUTDOWNEVENT\")";
		eventResult<< "( id . 0)";
		eventResult<< "( data . \"(shutdown)\")";
		eventResult<< ")";

	//	char eventResult[LISP_STRING];
	//	sprintf(eventResult,"((component shutdownEvent %d) %s)",0, "(shutdown)");
		COMP->eventInterface->append(eventResult.str());

		ACE_OS::sleep(ACE_Time_Value(1,0));
		std::cout<<__FUNCTION__<<" QUIT"<<std::endl;
	}

}

// Called when a substate is left
void SmartStateChangeHandler::handleQuitState(const std::string & substate) throw()
{
	// change this code to your needs !!!

}
