//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
//  Copyright (C) 2010 Jonas Brich
//
//        brich@mail.hs-ulm.de
//
//        Christian Schlegel (schlegel@hs-ulm.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//  This file is part of the "Unicap Video Server component".
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//-------------------------------------------------------------------------

#ifndef _IMAGETASK_HH
#define _IMAGETASK_HH

#include "ImageTaskCore.hh"

#include <CommBasicObjects/CommPose3d.hh>
#include <CommBasicObjects/CommBaseState.hh>
#include <DomainVision/CommVideoImage.hh>

#include <cv.h>
#include <highgui.h>

class ImageTask  : public ImageTaskCore
{

public:
	ImageTask(SmartACE::SmartComponent *comp);
	virtual ~ImageTask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();
	IplImage* convertDataArrayToIplImage(DomainVision::CommVideoImage &query_image, CvSize size);
private:
	unsigned int _image_buffer_index;
	std::vector<DomainVision::CommVideoImage*> _image_buffer;

	CommBasicObjects::CommBasePose default_base_position;
	CommBasicObjects::CommBaseVelocity zero_velocity;

	DomainVision::CommVideoImage* image;
	bool set_camera_params;
	void set_camera_intrinsic_params();
};

#endif
