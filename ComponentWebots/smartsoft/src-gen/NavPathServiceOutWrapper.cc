//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "NavPathServiceOutWrapper.hh"

// include component's main class
#include "ComponentWebots.hh"

// other extensin includes

NavPathServiceOutWrapper::NavPathServiceOutWrapper(Smart::ISendClientPattern<DomainRobotFleetNavigation::CommNavPath> *navPathServiceOut) {
	this->navPathServiceOut = navPathServiceOut;
	update_status = Smart::SMART_NODATA;
}

NavPathServiceOutWrapper::~NavPathServiceOutWrapper() {
}


Smart::StatusCode NavPathServiceOutWrapper::send(DomainRobotFleetNavigation::CommNavPath &navPathServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = navPathServiceOutDataObject;
	update_status = navPathServiceOut->send(navPathServiceOutDataObject);
	return update_status;
}

Smart::StatusCode NavPathServiceOutWrapper::getLatestUpdate(DomainRobotFleetNavigation::CommNavPath &navPathServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	navPathServiceOutDataObject = updateData;
	return update_status;
}
