//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _ROBOTBLOCKEDEVENTSERVERWRAPPER_HH
#define _ROBOTBLOCKEDEVENTSERVERWRAPPER_HH

#include <mutex>
#include "aceSmartSoft.hh"

// include communication objects
#include <CommNavigationObjects/CommCdlRobotBlockedEventParameter.hh>
#include <CommNavigationObjects/CommCdlRobotBlockedEventParameterACE.hh>
#include <CommNavigationObjects/CommCdlRobotBlockedEventResult.hh>
#include <CommNavigationObjects/CommCdlRobotBlockedEventResultACE.hh>
#include <CommNavigationObjects/CommCdlRobotBlockedState.hh>
#include <CommNavigationObjects/CommCdlRobotBlockedStateACE.hh>


class RobotBlockedEventServerWrapper
{
private:
	std::mutex update_mutex;
	Smart::StatusCode update_status;
	
	CommNavigationObjects::CommCdlRobotBlockedState updateEventState;
	CommNavigationObjects::CommCdlRobotBlockedEventResult updateEvent;
	CommNavigationObjects::CommCdlRobotBlockedEventParameter updateActivation;
	
	Smart::IEventServerPattern<CommNavigationObjects::CommCdlRobotBlockedEventParameter, CommNavigationObjects::CommCdlRobotBlockedEventResult, CommNavigationObjects::CommCdlRobotBlockedState> *robotBlockedEventServer;
	
public:
	RobotBlockedEventServerWrapper(Smart::IEventServerPattern<CommNavigationObjects::CommCdlRobotBlockedEventParameter, CommNavigationObjects::CommCdlRobotBlockedEventResult, CommNavigationObjects::CommCdlRobotBlockedState> *robotBlockedEventServer);
	virtual ~RobotBlockedEventServerWrapper();
	
	Smart::StatusCode put(CommNavigationObjects::CommCdlRobotBlockedState &eventState);
	
	Smart::StatusCode getLatestUpdate(CommNavigationObjects::CommCdlRobotBlockedState &eventState);
	
};

#endif // _ROBOTBLOCKEDEVENTSERVERWRAPPER_HH
