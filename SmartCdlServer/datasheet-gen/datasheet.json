{
	"name": "SmartCdlServer",
	"shortDescription": "The SmartCdlServer is based on the Curvature Distance Lookup (CDL) algorithm for fast local obstacle avoidance.",
	"type": "Toolify",
	"description": "<p></p><p> The SmartCdlServer is based on the Curvature Distance Lookup (CDL) algorithm for fast local obstacle avoidance.</p><p> The CDL algorithm is an improvement of the dynamic window approach. It considers the dynamics and kinematics of the robot, as well as its polygonal shape. It consumes raw laser scans or other sensor perceptions transformed into occupancy grids. The basic idea is that a robot moves along different curvatures (v, w combinations) which represent trajectories built up by circular arcs. The huge number of possible v, w combinations is reduced based on the observation that only a few curvatures are safely selectable given the current state and kinematics of the robot. Curvatures leading to a collision are discarded. High performance advantages are achieved by precalculating lookup tables. The final selection along the remaining admissible v, w combinations is done by an objective function, which trades off speed, goal-directedness and remaining distance until collision.</p><p> This objective function together with its weighting factors build different strategies, such as reactive driving, joystick navigation, rotating or approaching goals. The strategies are used for the selection of the best-fitting curvature with respect to the purpose of the strategy. Example strategies are passing over intermediate waypoints, approaching a goal given by a path-planner or following a person.</p><p> The SmartCdlServer will read files which contain precalculated lookup tables generated by cdlCalculate (included in SmartSoft). They contain the kinematics of the robot.</p><p> SmartCdlServer supports differential drive, synchro drive and omnidrive if neglecting lateral velocity.</p><p> Note: This component is used in Tutorials (e.g. Lesson 1).</p><p> See also: Christian Schlegel. Fast local obstacle avoidance under kinematic and dynamic constraints for a mobile robot. In Proc. Int. Conf. on Intelligent Robots and Systems (IROS), p. 594-599, Victoria, Canada, 1998.</p><p></p>",
	"purposes": ["Navigation", "Obstacle-Avoidance", "Curvature-Distance-Lookup", "CDL"],
	"spdxLicense": "LGPL-2.0-or-later",
	"technologyReadinessLevel": "TRL5",
	"homepage": "http://servicerobotik-ulm.de/components",
	"supplier": "Servicerobotics Ulm",
	"marketName": "Obstacle Avoidance Navigation Component",
	"services": [
		{
			"name": "LaserClient",
			"type": "InputPort",
			"serviceDefinition": "CommBasicObjects::LaserService",
			"commObjects": "CommBasicObjects::CommMobileLaserScan",
			"description": ""
		},
		{
			"name": "LaserClient2",
			"type": "InputPort",
			"serviceDefinition": "CommBasicObjects::LaserService",
			"commObjects": "CommBasicObjects::CommMobileLaserScan",
			"description": ""
		},
		{
			"name": "PlannerClient",
			"type": "InputPort",
			"serviceDefinition": "CommNavigationObjects::PlannerGoalService",
			"commObjects": "CommNavigationObjects::CommPlannerGoal",
			"description": ""
		},
		{
			"name": "NavVelSendServer",
			"type": "InputPort",
			"serviceDefinition": "CommNavigationObjects::NavigationVelocityService",
			"commObjects": "CommBasicObjects::CommNavigationVelocity",
			"description": ""
		},
		{
			"name": "TrackingClient",
			"type": "InputPort",
			"serviceDefinition": "CommTrackingObjects::TrackingService",
			"commObjects": "CommTrackingObjects::CommTrackingGoal",
			"description": ""
		},
		{
			"name": "IRClient",
			"type": "InputPort",
			"serviceDefinition": "CommNavigationObjects::IRService",
			"commObjects": "CommBasicObjects::CommMobileIRScan",
			"description": ""
		},
		{
			"name": "PathNavigationGoalClient",
			"type": "InputPort",
			"serviceDefinition": "CommNavigationObjects::CorridorNavigationNextGoal",
			"commObjects": "CommNavigationObjects::CommCorridorNavigationGoal",
			"description": ""
		},
		{
			"name": "BaseStateClient",
			"type": "InputPort",
			"serviceDefinition": "CommBasicObjects::BaseStateService",
			"commObjects": "CommBasicObjects::CommBaseState",
			"description": ""
		},
		{
			"name": "NavVelSendClient",
			"type": "OutputPort",
			"serviceDefinition": "CommNavigationObjects::NavigationVelocityService",
			"commObjects": "CommBasicObjects::CommNavigationVelocity",
			"description": ""
		},
		{
			"name": "GoalEventServer",
			"type": "OutputPort",
			"serviceDefinition": "CommNavigationObjects::GoalEventService",
			"commObjects": "CommNavigationObjects::CommCdlGoalEventParameter, CommNavigationObjects::CommCdlGoalEventResult, CommNavigationObjects::CdlGoalEventState",
			"description": ""
		},
		{
			"name": "RobotBlockedEventServer",
			"type": "OutputPort",
			"serviceDefinition": "CommNavigationObjects::RobotBlockedEventService",
			"commObjects": "CommNavigationObjects::CommCdlRobotBlockedEventParameter, CommNavigationObjects::CommCdlRobotBlockedEventResult, CommNavigationObjects::CommCdlRobotBlockedState",
			"description": ""
		}
	],
	"mainstates": [
		"MoveRobot",
		"Neutral"
	],
	"parameters": [
		{
			"name": "FREEBEHAVIOR",
			"nameFQN": "CommNavigationObjects.CdlParameter.FREEBEHAVIOR",
			"type": "parameter",
			"description": " Activate or deactivate the free behavior in stalled situations. If activated, the robot will turn in a free direction in stalled situations. Values: ACTIVATE, DEACTIVATE ",
			"attributes": [
				{
					"name": "free",
					"type": "enum",
					"values": ["ACTIVATE", "DEACTIVATE"],
					"default": "DEACTIVATE",
					"description": ""
				}
			]
		}
		,
		{
			"name": "PATHNAVFREEBEHAVIOR",
			"nameFQN": "CommNavigationObjects.CdlParameter.PATHNAVFREEBEHAVIOR",
			"type": "parameter",
			"description": "",
			"attributes": [
				{
					"name": "free",
					"type": "enum",
					"values": ["ACTIVATE", "DEACTIVATE"],
					"default": "DEACTIVATE",
					"description": ""
				}
			]
		}
		,
		{
			"name": "LOOKUPTABLE",
			"nameFQN": "CommNavigationObjects.CdlParameter.LOOKUPTABLE",
			"type": "parameter",
			"description": " Changes the lookup table. Lookup tables are precalculated in files and contain the kinematics and shape of the robot. Two lookup files can be specified in the ini configuration. This parameter allows to switch between these lookup tables at runtime. Note that you can use this parameter only in state neutral. Values: DEFAULT, SECOND. See Ini-Configuration.",
			"attributes": [
				{
					"name": "lt",
					"type": "enum",
					"values": ["DEFAULT", "SECOND"],
					"default": "DEFAULT",
					"description": ""
				}
			]
		}
		,
		{
			"name": "TRANSVEL",
			"nameFQN": "CommNavigationObjects.CdlParameter.TRANSVEL",
			"type": "parameter",
			"description": " Set translation velocity ?vmin, ?vmax in [mm/s]. The values are thresholded by the robot's vmin and vmax inputs to calculate the lookup tables in cdlCalculate (CDL_V_TRA_).",
			"attributes": [
				{
					"name": "vmin",
					"type": "string",
					"default": "0.0",
					"description": ""
				},
				{
					"name": "vmax",
					"type": "string",
					"default": "400.0",
					"description": ""
				}
			]
		}
		,
		{
			"name": "ROTVEL",
			"nameFQN": "CommNavigationObjects.CdlParameter.ROTVEL",
			"type": "parameter",
			"description": " Set rotation velocity minimum/maximum values ?wmin, ?wmax in [deg/s]. The values are thresholded by the robot's wmin and wmax inputs to calculate the lookup tables in cdlCalculate (CDL_V_ROT_).",
			"attributes": [
				{
					"name": "wmin",
					"type": "string",
					"default": "-40.0",
					"description": ""
				},
				{
					"name": "wmax",
					"type": "string",
					"default": "40.0",
					"description": ""
				}
			]
		}
		,
		{
			"name": "GOALMODE",
			"nameFQN": "CommNavigationObjects.CdlParameter.GOALMODE",
			"type": "parameter",
			"description": " Set goal type and goal source. Available modes:",
			"attributes": [
				{
					"name": "gm",
					"type": "enum",
					"values": ["ABSOLUTE", "PLANNER", "PERSON", "SAVED", "ANGLE_ABSOLUTE", "ANGLE_RELATIVE", "NEUTRAL", "PATH_NAV"],
					"default": "NEUTRAL",
					"description": ""
				}
			]
		}
		,
		{
			"name": "GOALREGION",
			"nameFQN": "CommNavigationObjects.CdlParameter.GOALREGION",
			"type": "parameter",
			"description": " Set goal: ?x, ?y, angle ?a, id ?id. Sends an event CDL_GOAL_NOT_REACHED once a new goal is set. CDL_GOAL_REACHED is sent as soon as the goal is reached. All values must be set while ?x/?y or ?a may be ignored depending on the strategy and goalmode.",
			"attributes": [
				{
					"name": "goalX",
					"type": "string",
					"default": "0.0",
					"description": ""
				},
				{
					"name": "goalY",
					"type": "string",
					"default": "0.0",
					"description": ""
				},
				{
					"name": "goalA",
					"type": "string",
					"default": "0.0",
					"description": ""
				}
			]
		}
		,
		{
			"name": "APPROACHDIST",
			"nameFQN": "CommNavigationObjects.CdlParameter.APPROACHDIST",
			"type": "parameter",
			"description": " Set goal approach distance [mm]. The robot will approach until goal is within this distance.",
			"attributes": [
				{
					"name": "approachDistance",
					"type": "string",
					"default": "100.0",
					"description": ""
				}
			]
		}
		,
		{
			"name": "ID",
			"nameFQN": "CommNavigationObjects.CdlParameter.ID",
			"type": "parameter",
			"description": " Set CDL_ID. Used to synchronize components, for example with smartMapperGridMap and smartPlannerBreathFirstSearch.",
			"attributes": [
				{
					"name": "id",
					"type": "string",
					"default": "0",
					"description": ""
				}
			]
		}
		,
		{
			"name": "SAFETYCL",
			"nameFQN": "CommNavigationObjects.CdlParameter.SAFETYCL",
			"type": "parameter",
			"description": " Set global CDL safety clearance distance [mm]. Robot will keep this distance from obstacles when approaching.",
			"attributes": [
				{
					"name": "safetyClearance",
					"type": "string",
					"default": "200",
					"description": ""
				}
			]
		}
		,
		{
			"name": "COMMIT",
			"nameFQN": "COMMIT",
			"type": "parameter",
			"description": "Commit the current parameter configuration.",
			"attributes": []
		}
	],
	"triggers": [
		{
			"name": "SETSTRATEGY",
			"nameFQN": "CommNavigationObjects.CdlParameter.SETSTRATEGY",
			"type": "trigger",
			"description": " Set the CDL strategy. Available strategies:",
			"attributes": [
				{
					"name": "strat",
					"type": "enum",
					"values": ["NEUTRAL", "REACTIVE", "JOYSTICK", "TURN", "APPROACH_FLAT_SURF", "APPROACH_HALT", "APPROACH_COVERAGE", "APPROACH", "ROTATE", "FOLLOW", "BACKWARD", "PATH_NAV", "VELCHECK"],
					"default": "",
					"description": ""
				}
			]
		},
		{
			"name": "SETGOALREGION",
			"nameFQN": "CommNavigationObjects.CdlParameter.SETGOALREGION",
			"type": "trigger",
			"description": "",
			"attributes": [
				{
					"name": "goalId",
					"type": "string",
					"default": "",
					"description": ""
				}
			]
		},
		{
			"name": "SAVECURPOS",
			"nameFQN": "CommNavigationObjects.CdlParameter.SAVECURPOS",
			"type": "trigger",
			"description": " Save the current robot pose as ?id (for relative movements).",
			"attributes": [
				{
					"name": "goalId",
					"type": "string",
					"default": "",
					"description": ""
				}
			]
		}
	]
}
