# baseURI: http://servicerobotik-ulm.de/ComponentsAndSystems#SmartCdlServer
# imports: http://robmosys.eu/rdf/composition-structures
# imports: http://seronet-projekt.de/models/t2#Navigation
# imports: http://spdx.org/licenses/LGPL-2.0-or-later

# imports: http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects
# imports: http://www.servicerobotik-ulm.de/DomainModels/CommNavigationObjects
# imports: http://www.servicerobotik-ulm.de/DomainModels/CommRobotinoObjects
# imports: http://www.servicerobotik-ulm.de/DomainModels/CommTrackingObjects

#######################################
# Technical Data Sheet
# for a SeRoNet Software Component as 
# exported by the SmartMDSD Toolchain
#
# erste Zeile des .ttl muss enthalten: "# ComponentID: <id uri>"
# This file will be placed in:
# <componentName>/datasheet-gen/<componentName>.ttl
#######################################

# all generated files use these prefixes
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix t1: <http://seronet-projekt.de/models/t1#> .
@prefix spdx: <http://spdx.org/rdf/terms#> .
@prefix spdx-lic: <http://spdx.org/licenses/> .

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# TODO past “Durchstich”: exactly identify which elements belong to SeRoNet and which belong to RobMoSys
@prefix robmosys: <http://robmosys.eu/rdf/composition-structures#> .

# these namespaces can be different in generated files
@prefix t3: <http://servicerobotik-ulm.de/ComponentsAndSystems#> .

@prefix CommBasicObjects: <http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects#> .
@prefix CommNavigationObjects: <http://www.servicerobotik-ulm.de/DomainModels/CommNavigationObjects#> .
@prefix CommRobotinoObjects: <http://www.servicerobotik-ulm.de/DomainModels/CommRobotinoObjects#> .
@prefix CommTrackingObjects: <http://www.servicerobotik-ulm.de/DomainModels/CommTrackingObjects#> .

##### Software Component SmartCdlServer
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer a robmosys:ComponentDefinition;
	a owl:Ontology ;
	owl:imports <http://robmosys.eu/rdf/composition-structures> ;
	owl:imports <http://spdx.org/licenses/LGPL-2.0-or-later>;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects> ;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/CommNavigationObjects> ;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/CommRobotinoObjects> ;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/CommTrackingObjects> ;
	
	# Human readable name of this component
	# Equals with the project name
	rdfs:label "SmartCdlServer";

	# Abstract. 1-sentence, very brief, description about this component.
	t1:shortDescription "The SmartCdlServer is based on the Curvature Distance Lookup (CDL) algorithm for fast local obstacle avoidance.";

	# A long description of this component
	t1:description """
	<p></p>
	<p> 	The SmartCdlServer is based on the Curvature Distance Lookup (CDL) algorithm for fast local obstacle avoidance.
	</p>
	<p>The CDL algorithm is an improvement of the dynamic window approach. It considers the dynamics and kinematics of the robot,
	as well as its polygonal shape. It consumes raw laser scans or other sensor perceptions transformed into occupancy grids.
	The basic idea is that a robot moves along different curvatures (v, w combinations) which represent trajectories built up
	by circular arcs. The huge number of possible v, w combinations is reduced based on the observation that only a few curvatures are
	safely selectable given the current state and kinematics of the robot. Curvatures leading to a collision are discarded.
	High performance advantages are achieved by precalculating lookup tables. The final selection along the remaining admissible v, w combinations
	is done by an objective function, which trades off speed, goal-directedness and remaining distance until collision.
	</p>
	<p>This objective function together with its weighting factors build different strategies, such as reactive driving,
	joystick navigation, rotating or approaching goals. The strategies are used for the selection of the best-fitting curvature with
	respect to the purpose of the strategy. Example strategies are passing over intermediate waypoints, approaching a goal given by a
	path-planner or following a person.
	</p>
	<p>The SmartCdlServer will read files which contain precalculated lookup tables generated by cdlCalculate (included in SmartSoft).
	They contain the kinematics of the robot.
	</p>
	<p>SmartCdlServer supports differential drive, synchro drive and omnidrive if neglecting lateral velocity.
	</p>
	<p>Note: This component is used in Tutorials (e.g. Lesson 1).
	</p>
	<p>See also:
	Christian Schlegel. Fast local obstacle avoidance under kinematic and dynamic constraints for a mobile robot.
	In Proc. Int. Conf. on Intelligent Robots and Systems (IROS), p. 594-599, Victoria, Canada, 1998.
	</p>
	<p></p>
	""";
	
	# License will contain SPDX License Identifier
	# see https://spdx.org/licenses/
	t1:license <http://spdx.org/licenses/LGPL-2.0-or-later.html>;
	# Technology Readiness Scale, e.g.
	# http://www.innovationseeds.eu/Virtual_Library/Knowledge/TLR_Scale.kl
	# Level 1 to level 9.
	# plus trl:undefined for undefined TRL
	t1:trl t1:TRL_Level5;
	# The webpage with additional information about this component
	t1:homepage "http://servicerobotik-ulm.de/components"^^xsd:anyURI;
	# DatasheetProperty Supplier
	t1:supplierDescription "Servicerobotics Ulm";
	# DatasheetProperty Purpose
	t1:purposeDescription "Navigation";

	# Services this component provides or requires
	# ComponentPort LaserClient
	t1:requiredService t3:SmartCdlServer_LaserClient;
	# ComponentPort LaserClient2
	t1:requiredService t3:SmartCdlServer_LaserClient2;
	# ComponentPort PlannerClient
	t1:requiredService t3:SmartCdlServer_PlannerClient;
	# ComponentPort NavVelSendServer
	t1:providedService t3:SmartCdlServer_NavVelSendServer;
	# ComponentPort TrackingClient
	t1:requiredService t3:SmartCdlServer_TrackingClient;
	# ComponentPort IRClient
	t1:requiredService t3:SmartCdlServer_IRClient;
	# ComponentPort PathNavigationGoalClient
	t1:requiredService t3:SmartCdlServer_PathNavigationGoalClient;
	# ComponentPort BaseStateClient
	t1:requiredService t3:SmartCdlServer_BaseStateClient;
	# ComponentPort NavVelSendClient
	t1:requiredService t3:SmartCdlServer_NavVelSendClient;
	# ComponentPort GoalEventServer
	t1:providedService t3:SmartCdlServer_GoalEventServer;
	# ComponentPort RobotBlockedEventServer
	t1:providedService t3:SmartCdlServer_RobotBlockedEventServer;
.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_LaserClient 
	rdf:type CommBasicObjects:LaserService ;
	# name of this service definition as from the model
	rdfs:label "LaserClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_LaserClient2 
	rdf:type CommBasicObjects:LaserService ;
	# name of this service definition as from the model
	rdfs:label "LaserClient2";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_PlannerClient 
	rdf:type CommNavigationObjects:PlannerGoalService ;
	# name of this service definition as from the model
	rdfs:label "PlannerClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_NavVelSendServer 
	rdf:type CommNavigationObjects:NavigationVelocityService ;
	# name of this service definition as from the model
	rdfs:label "NavVelSendServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_TrackingClient 
	rdf:type CommTrackingObjects:TrackingService ;
	# name of this service definition as from the model
	rdfs:label "TrackingClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_IRClient 
	rdf:type CommNavigationObjects:IRService ;
	# name of this service definition as from the model
	rdfs:label "IRClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_PathNavigationGoalClient 
	rdf:type CommRobotinoObjects:PathNavigationGoalService ;
	# name of this service definition as from the model
	rdfs:label "PathNavigationGoalClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_BaseStateClient 
	rdf:type CommBasicObjects:BaseStateService ;
	# name of this service definition as from the model
	rdfs:label "BaseStateClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_NavVelSendClient 
	rdf:type CommNavigationObjects:NavigationVelocityService ;
	# name of this service definition as from the model
	rdfs:label "NavVelSendClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_GoalEventServer 
	rdf:type CommNavigationObjects:GoalEventService ;
	# name of this service definition as from the model
	rdfs:label "GoalEventServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:SmartCdlServer_RobotBlockedEventServer 
	rdf:type CommNavigationObjects:RobotBlockedEventService ;
	# name of this service definition as from the model
	rdfs:label "RobotBlockedEventServer";


.

