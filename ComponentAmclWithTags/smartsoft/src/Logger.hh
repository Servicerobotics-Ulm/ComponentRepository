//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------
//  Copyright (C) 2020 Nayabrasul Shaik
//
//        nayabrasul.shaik@thu.de
//
//        Christian Schlegel (christian.schlegel@thu.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//-------------------------------------------------------------------------

#ifndef SMARTSOFT_SRC_LOGGER_HH_
#define SMARTSOFT_SRC_LOGGER_HH_

#include <iostream>
#include <fstream>
#include <chrono>
#include <ctime>
#include <sstream>
#include <iomanip>
#include <map>

#include "CommBasicObjects/CommPose3d.hh"
#include "CommBasicObjects/CommBasePositionUpdate.hh"

class Logger {
private:
	std::ofstream log_file;
	std::string filename;
public:
	Logger();
	virtual ~Logger();
	void write_baseUpdate(const CommBasicObjects::CommBasePositionUpdate& bpu, int cluster_count, double max_hyp_covar[3][3],
			              double egv_1, double egv_2, bool laser_resampled, bool tag_resampled, bool force_publication, bool is_kidnapped);
	double pi_to_pi(double angle);
	bool is_pose_valid(const CommBasicObjects::CommPose3d& pose);
};

#endif /* SMARTSOFT_SRC_LOGGER_HH_ */
