//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _PARAMETERSTATESTRUCTCORE_HH
#define _PARAMETERSTATESTRUCTCORE_HH

#include "aceSmartSoft.hh"

#include "nlohmann/json.hpp"

#include <list>
#include <iostream>

// forward declaration (in order to define validateCOMMIT(ParameterStateStruct) which is implemented in derived class)
class ParameterStateStruct;

class ParameterStateStructCore
{
	friend class ParamUpdateHandler;
public:
	
		///////////////////////////////////////////
		// Internal params
		///////////////////////////////////////////
		
		/**
		 * Definition of Parameter docking
		 */
		class dockingType 
		{
			friend class ParamUpdateHandler;
		protected:
			/**
			 * here are the member definitions
			 */
			bool connectToServices;
			bool enable_visualization;
			double laserDocking_rotVel;
			double laserDocking_stopDistance;
			double laserDocking_transVelX;
			double laserDocking_transVelY;
			bool useLaser;
		
		public:
			// default constructor
			dockingType() {
				connectToServices = true;
				enable_visualization = false;
				laserDocking_rotVel = 20;
				laserDocking_stopDistance = 0.5;
				laserDocking_transVelX = 0.2;
				laserDocking_transVelY = 0.2;
				useLaser = true;
			}
		
			/**
			 * here are the public getters
			 */
			inline bool getConnectToServices() const { return connectToServices; }
			inline bool getEnable_visualization() const { return enable_visualization; }
			inline double getLaserDocking_rotVel() const { return laserDocking_rotVel; }
			inline double getLaserDocking_stopDistance() const { return laserDocking_stopDistance; }
			inline double getLaserDocking_transVelX() const { return laserDocking_transVelX; }
			inline double getLaserDocking_transVelY() const { return laserDocking_transVelY; }
			inline bool getUseLaser() const { return useLaser; }
			
			void to_ostream(std::ostream &os = std::cout) const
			{
				os << "docking(";
				os << "connectToServices = " << connectToServices; os << ", ";
				os << "enable_visualization = " << enable_visualization; os << ", ";
				os << "laserDocking_rotVel = " << laserDocking_rotVel; os << ", ";
				os << "laserDocking_stopDistance = " << laserDocking_stopDistance; os << ", ";
				os << "laserDocking_transVelX = " << laserDocking_transVelX; os << ", ";
				os << "laserDocking_transVelY = " << laserDocking_transVelY; os << ", ";
				os << "useLaser = " << useLaser;
				os << ")\n";
			}
			
		}; // end class dockingType
		
	
		///////////////////////////////////////////
		// External params
		///////////////////////////////////////////
		
	
		///////////////////////////////////////////
		// Instance params
		///////////////////////////////////////////
		
		/**
		 * Definition of instantiated ParameterRepository CommRobotinoObjects
		 */
		class CommRobotinoObjectsType {
			friend class ParamUpdateHandler;
			public:
			/**
			 * Definition of instantiated ParameterSet RobotinoDockingParameter
			 */
			class RobotinoDockingParameterType {
				friend class ParamUpdateHandler;
				public:
				/**
				 * Definition of Parameter BELT_ID
				 */
				class BELT_IDType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					int beltId;
					
				public:
					// default constructor
					BELT_IDType() {
						beltId = 0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline int getBeltId() const { return beltId; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tBELT_ID(";
						os << "beltId = " << beltId;
						os << ")\n";
					}
					
				}; // end of parameter class BELT_IDType
				
				/**
				 * Definition of Parameter NUM_BELTS
				 */
				class NUM_BELTSType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					int numBelts;
					
				public:
					// default constructor
					NUM_BELTSType() {
						numBelts = 0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline int getNumBelts() const { return numBelts; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tNUM_BELTS(";
						os << "numBelts = " << numBelts;
						os << ")\n";
					}
					
				}; // end of parameter class NUM_BELTSType
				
				/**
				 * Definition of Parameter STATION_ID
				 */
				class STATION_IDType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					int stationID;
					
				public:
					// default constructor
					STATION_IDType() {
						stationID = 0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline int getStationID() const { return stationID; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tSTATION_ID(";
						os << "stationID = " << stationID;
						os << ")\n";
					}
					
				}; // end of parameter class STATION_IDType
				
				/**
				 * Definition of Parameter ir_dock_center_sensor_zero
				 */
				class ir_dock_center_sensor_zeroType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double ir_dock_center_sensor_zero;
					
				public:
					// default constructor
					ir_dock_center_sensor_zeroType() {
						ir_dock_center_sensor_zero = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getIr_dock_center_sensor_zero() const { return ir_dock_center_sensor_zero; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tir_dock_center_sensor_zero(";
						os << "ir_dock_center_sensor_zero = " << ir_dock_center_sensor_zero;
						os << ")\n";
					}
					
				}; // end of parameter class ir_dock_center_sensor_zeroType
				
				/**
				 * Definition of Parameter ir_dock_stop_dist_l1
				 */
				class ir_dock_stop_dist_l1Type {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double ir_dock_stop_dist_l1;
					
				public:
					// default constructor
					ir_dock_stop_dist_l1Type() {
						ir_dock_stop_dist_l1 = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getIr_dock_stop_dist_l1() const { return ir_dock_stop_dist_l1; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tir_dock_stop_dist_l1(";
						os << "ir_dock_stop_dist_l1 = " << ir_dock_stop_dist_l1;
						os << ")\n";
					}
					
				}; // end of parameter class ir_dock_stop_dist_l1Type
				
				/**
				 * Definition of Parameter ir_dock_stop_dist_l2_max
				 */
				class ir_dock_stop_dist_l2_maxType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double ir_dock_stop_dist_l2_max;
					
				public:
					// default constructor
					ir_dock_stop_dist_l2_maxType() {
						ir_dock_stop_dist_l2_max = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getIr_dock_stop_dist_l2_max() const { return ir_dock_stop_dist_l2_max; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tir_dock_stop_dist_l2_max(";
						os << "ir_dock_stop_dist_l2_max = " << ir_dock_stop_dist_l2_max;
						os << ")\n";
					}
					
				}; // end of parameter class ir_dock_stop_dist_l2_maxType
				
				/**
				 * Definition of Parameter ir_dock_stop_dist_l2_min
				 */
				class ir_dock_stop_dist_l2_minType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double ir_dock_stop_dist_l2_min;
					
				public:
					// default constructor
					ir_dock_stop_dist_l2_minType() {
						ir_dock_stop_dist_l2_min = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getIr_dock_stop_dist_l2_min() const { return ir_dock_stop_dist_l2_min; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tir_dock_stop_dist_l2_min(";
						os << "ir_dock_stop_dist_l2_min = " << ir_dock_stop_dist_l2_min;
						os << ")\n";
					}
					
				}; // end of parameter class ir_dock_stop_dist_l2_minType
				
				/**
				 * Definition of Parameter laser_dockstop_dist
				 */
				class laser_dockstop_distType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double laser_dock_stop_dist;
					
				public:
					// default constructor
					laser_dockstop_distType() {
						laser_dock_stop_dist = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getLaser_dock_stop_dist() const { return laser_dock_stop_dist; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tlaser_dockstop_dist(";
						os << "laser_dock_stop_dist = " << laser_dock_stop_dist;
						os << ")\n";
					}
					
				}; // end of parameter class laser_dockstop_distType
				
				/**
				 * Definition of Parameter max_reflector_dist
				 */
				class max_reflector_distType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double max_reflector_dist;
					
				public:
					// default constructor
					max_reflector_distType() {
						max_reflector_dist = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getMax_reflector_dist() const { return max_reflector_dist; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tmax_reflector_dist(";
						os << "max_reflector_dist = " << max_reflector_dist;
						os << ")\n";
					}
					
				}; // end of parameter class max_reflector_distType
				
				/**
				 * Definition of Parameter max_station_width
				 */
				class max_station_widthType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double max_station_width;
					
				public:
					// default constructor
					max_station_widthType() {
						max_station_width = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getMax_station_width() const { return max_station_width; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tmax_station_width(";
						os << "max_station_width = " << max_station_width;
						os << ")\n";
					}
					
				}; // end of parameter class max_station_widthType
				
				/**
				 * Definition of Parameter min_station_width
				 */
				class min_station_widthType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double min_station_width;
					
				public:
					// default constructor
					min_station_widthType() {
						min_station_width = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getMin_station_width() const { return min_station_width; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\tmin_station_width(";
						os << "min_station_width = " << min_station_width;
						os << ")\n";
					}
					
				}; // end of parameter class min_station_widthType
				
				/**
				 * Definition of Parameter offs_bet_center_o_belts
				 */
				class offs_bet_center_o_beltsType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double offs_bet_center_o_belts;
					
				public:
					// default constructor
					offs_bet_center_o_beltsType() {
						offs_bet_center_o_belts = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getOffs_bet_center_o_belts() const { return offs_bet_center_o_belts; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\toffs_bet_center_o_belts(";
						os << "offs_bet_center_o_belts = " << offs_bet_center_o_belts;
						os << ")\n";
					}
					
				}; // end of parameter class offs_bet_center_o_beltsType
				
				/**
				 * Definition of Parameter offs_left_ref_to_1Belt_cent
				 */
				class offs_left_ref_to_1Belt_centType {
					friend class ParamUpdateHandler;
				
				protected:
					/**
					 * here are the member definitions
					 */
					double offs_left_ref_to_1Belt_cent;
					
				public:
					// default constructor
					offs_left_ref_to_1Belt_centType() {
						offs_left_ref_to_1Belt_cent = 0.0;
					}
					
					/**
					 * here are the getter methods
					 */
					inline double getOffs_left_ref_to_1Belt_cent() const { return offs_left_ref_to_1Belt_cent; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "\toffs_left_ref_to_1Belt_cent(";
						os << "offs_left_ref_to_1Belt_cent = " << offs_left_ref_to_1Belt_cent;
						os << ")\n";
					}
					
				}; // end of parameter class offs_left_ref_to_1Belt_centType
				
				protected:
					/**
					 * internal members
					 */
					BELT_IDType BELT_ID;
					NUM_BELTSType NUM_BELTS;
					STATION_IDType STATION_ID;
					ir_dock_center_sensor_zeroType ir_dock_center_sensor_zero;
					ir_dock_stop_dist_l1Type ir_dock_stop_dist_l1;
					ir_dock_stop_dist_l2_maxType ir_dock_stop_dist_l2_max;
					ir_dock_stop_dist_l2_minType ir_dock_stop_dist_l2_min;
					laser_dockstop_distType laser_dockstop_dist;
					max_reflector_distType max_reflector_dist;
					max_station_widthType max_station_width;
					min_station_widthType min_station_width;
					offs_bet_center_o_beltsType offs_bet_center_o_belts;
					offs_left_ref_to_1Belt_centType offs_left_ref_to_1Belt_cent;
					
				public:
					/**
					 * public getter methods
					 */
					inline BELT_IDType getBELT_ID() const { return BELT_ID; }
					inline NUM_BELTSType getNUM_BELTS() const { return NUM_BELTS; }
					inline STATION_IDType getSTATION_ID() const { return STATION_ID; }
					inline ir_dock_center_sensor_zeroType getIr_dock_center_sensor_zero() const { return ir_dock_center_sensor_zero; }
					inline ir_dock_stop_dist_l1Type getIr_dock_stop_dist_l1() const { return ir_dock_stop_dist_l1; }
					inline ir_dock_stop_dist_l2_maxType getIr_dock_stop_dist_l2_max() const { return ir_dock_stop_dist_l2_max; }
					inline ir_dock_stop_dist_l2_minType getIr_dock_stop_dist_l2_min() const { return ir_dock_stop_dist_l2_min; }
					inline laser_dockstop_distType getLaser_dockstop_dist() const { return laser_dockstop_dist; }
					inline max_reflector_distType getMax_reflector_dist() const { return max_reflector_dist; }
					inline max_station_widthType getMax_station_width() const { return max_station_width; }
					inline min_station_widthType getMin_station_width() const { return min_station_width; }
					inline offs_bet_center_o_beltsType getOffs_bet_center_o_belts() const { return offs_bet_center_o_belts; }
					inline offs_left_ref_to_1Belt_centType getOffs_left_ref_to_1Belt_cent() const { return offs_left_ref_to_1Belt_cent; }
					
					void to_ostream(std::ostream &os = std::cout) const
					{
						os << "RobotinoDockingParameter(\n";
						BELT_ID.to_ostream(os);
						NUM_BELTS.to_ostream(os);
						STATION_ID.to_ostream(os);
						ir_dock_center_sensor_zero.to_ostream(os);
						ir_dock_stop_dist_l1.to_ostream(os);
						ir_dock_stop_dist_l2_max.to_ostream(os);
						ir_dock_stop_dist_l2_min.to_ostream(os);
						laser_dockstop_dist.to_ostream(os);
						max_reflector_dist.to_ostream(os);
						max_station_width.to_ostream(os);
						min_station_width.to_ostream(os);
						offs_bet_center_o_belts.to_ostream(os);
						offs_left_ref_to_1Belt_cent.to_ostream(os);
						os << ")";
					}
			}; // end of parameter-set class RobotinoDockingParameterType
			
			protected:
				/**
				 * internal members
				 */
				RobotinoDockingParameterType RobotinoDockingParameter;
			
			public:
				/**
				 * public getter methods
				 */
				inline RobotinoDockingParameterType getRobotinoDockingParameter() const { return RobotinoDockingParameter; }
				
				void to_ostream(std::ostream &os = std::cout) const
				{
					os << "CommRobotinoObjects(\n";
					RobotinoDockingParameter.to_ostream(os);
					os << ")";
				}
		}; // end of parameter-repository wrapper class CommRobotinoObjectsType
	
protected:

	// Internal params
	dockingType docking;
	
	// External params
	
	// Instance params (encapsulated in a wrapper class for each instantiated parameter repository)
	CommRobotinoObjectsType CommRobotinoObjects;
	

	void setContent(const ParameterStateStructCore &commit) {
		// External params
	
		this->CommRobotinoObjects = commit.getCommRobotinoObjects();
	}

	// special trigger method (user upcall) called before updating parameter global state
	virtual SmartACE::ParamResponseType handleCOMMIT(const ParameterStateStruct &commitState) = 0;
public:
	ParameterStateStructCore() {  }
	virtual ~ParameterStateStructCore() {  }
	
	// internal param getters
	dockingType getDocking() const {
		return docking;
	}
	
	// external param getters
	
	// repo wrapper class getter(s)
	CommRobotinoObjectsType getCommRobotinoObjects() const {
		return CommRobotinoObjects;
	}
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const
	{
		// Internal params
		docking.to_ostream(os);
		
		// External params
		
		// Instance params (encapsulated in a wrapper class for each instantiated parameter repository)
		CommRobotinoObjects.to_ostream(os);
	}
	
	std::string getAsJSONString() {
		nlohmann::json param;
	
		param["docking"] = nlohmann::json {
			{"connectToServices" , getDocking().getConnectToServices()},
			{"enable_visualization" , getDocking().getEnable_visualization()},
			{"laserDocking_rotVel" , getDocking().getLaserDocking_rotVel()},
			{"laserDocking_stopDistance" , getDocking().getLaserDocking_stopDistance()},
			{"laserDocking_transVelX" , getDocking().getLaserDocking_transVelX()},
			{"laserDocking_transVelY" , getDocking().getLaserDocking_transVelY()},
			{"useLaser" , getDocking().getUseLaser()}
		};
	
		param["RobotinoDockingParameter"] = nlohmann::json {
			{ "BELT_ID", {
				{"beltId" , getCommRobotinoObjects().getRobotinoDockingParameter().getBELT_ID().getBeltId()}
			}},
			{ "NUM_BELTS", {
				{"numBelts" , getCommRobotinoObjects().getRobotinoDockingParameter().getNUM_BELTS().getNumBelts()}
			}},
			{ "STATION_ID", {
				{"stationID" , getCommRobotinoObjects().getRobotinoDockingParameter().getSTATION_ID().getStationID()}
			}},
			{ "ir_dock_center_sensor_zero", {
				{"ir_dock_center_sensor_zero" , getCommRobotinoObjects().getRobotinoDockingParameter().getIr_dock_center_sensor_zero().getIr_dock_center_sensor_zero()}
			}},
			{ "ir_dock_stop_dist_l1", {
				{"ir_dock_stop_dist_l1" , getCommRobotinoObjects().getRobotinoDockingParameter().getIr_dock_stop_dist_l1().getIr_dock_stop_dist_l1()}
			}},
			{ "ir_dock_stop_dist_l2_max", {
				{"ir_dock_stop_dist_l2_max" , getCommRobotinoObjects().getRobotinoDockingParameter().getIr_dock_stop_dist_l2_max().getIr_dock_stop_dist_l2_max()}
			}},
			{ "ir_dock_stop_dist_l2_min", {
				{"ir_dock_stop_dist_l2_min" , getCommRobotinoObjects().getRobotinoDockingParameter().getIr_dock_stop_dist_l2_min().getIr_dock_stop_dist_l2_min()}
			}},
			{ "laser_dockstop_dist", {
				{"laser_dock_stop_dist" , getCommRobotinoObjects().getRobotinoDockingParameter().getLaser_dockstop_dist().getLaser_dock_stop_dist()}
			}},
			{ "max_reflector_dist", {
				{"max_reflector_dist" , getCommRobotinoObjects().getRobotinoDockingParameter().getMax_reflector_dist().getMax_reflector_dist()}
			}},
			{ "max_station_width", {
				{"max_station_width" , getCommRobotinoObjects().getRobotinoDockingParameter().getMax_station_width().getMax_station_width()}
			}},
			{ "min_station_width", {
				{"min_station_width" , getCommRobotinoObjects().getRobotinoDockingParameter().getMin_station_width().getMin_station_width()}
			}},
			{ "offs_bet_center_o_belts", {
				{"offs_bet_center_o_belts" , getCommRobotinoObjects().getRobotinoDockingParameter().getOffs_bet_center_o_belts().getOffs_bet_center_o_belts()}
			}},
			{ "offs_left_ref_to_1Belt_cent", {
				{"offs_left_ref_to_1Belt_cent" , getCommRobotinoObjects().getRobotinoDockingParameter().getOffs_left_ref_to_1Belt_cent().getOffs_left_ref_to_1Belt_cent()}
			}}
		};
		
		return param.dump();
	}
};

#endif
