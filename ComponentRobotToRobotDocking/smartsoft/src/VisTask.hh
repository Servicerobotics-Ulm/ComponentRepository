//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//
//  Copyright (C)  2018 Matthias Lutz
//
//              lutz@hs-ulm.de
//              schlegel@hs-ulm.de
//
//      ZAFH Servicerobotic Ulm
//      Christian Schlegel
//      University of Applied Sciences
//      Prittwitzstr. 10
//      89075 Ulm
//      Germany
//
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//-------------------------------------------------------------------------
#ifndef _VISTASK_HH
#define _VISTASK_HH

#include "VisTaskCore.hh"

#include <pcl/point_types.h>
//#include <pcl/common/common_headers.h>
#include <pcl/point_cloud.h>
#include <pcl/visualization/pcl_visualizer.h>
#include <map>

class VisTask  : public VisTaskCore
{
private:
public:
	VisTask(SmartACE::SmartComponent *comp);
	virtual ~VisTask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();

	void showPointCloud(boost::shared_ptr<pcl::PointCloud<pcl::PointXYZ> > cloud, std::string id, double color_r=255, double color_g=255, double color_b= 255);
	void clear();
	void removePointCloud(std::string id);


	void showCircle(pcl::ModelCoefficients coefficients, std::string id);
	void removeCircle(std::string id);
	void removeShape(std::string id);


	SmartACE::SmartMutex lock;
	boost::shared_ptr<pcl::visualization::PCLVisualizer> viewer;

	std::map<std::string, bool> objectInserted;
};

#endif
