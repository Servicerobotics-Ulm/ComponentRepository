//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "BaseStateQueryHandler.hh"
#include "SmartPioneerBaseServer.hh"

BaseStateQueryHandler::BaseStateQueryHandler(Smart::IQueryServerPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommBaseState>* server)
:	BaseStateQueryHandlerCore(server)
{
	
}

BaseStateQueryHandler::~BaseStateQueryHandler()
{
	
}

void BaseStateQueryHandler::on_update_from(const RobotTask* robotTask)
{
	mutex.acquire();
	time_stamp.set_now();  // Set the timestamp to the current time

	//base_velocity.set_v((xSpeed + ySpeed) / 2);
	base_velocity.setVX( robotTask->getV() );
	//base_velocity.set_omega_base(yawSpeed);
	base_velocity.setWZ( robotTask->getOmegaRad() );

	// push the objects CommBasePose and CommBaseVelocity into the SmartSoft CommBaseState object
	base_state.set_time_stamp(time_stamp);
	base_state.set_base_position(base_position);
	base_state.set_base_position( robotTask->getBasePosition() );
	base_state.set_base_raw_position( robotTask->getBaseRawPosition() );
	base_state.set_base_velocity(base_velocity);
	mutex.release();
}

void BaseStateQueryHandler::handleQuery(const Smart::QueryIdPtr &id, const CommBasicObjects::CommVoid& request)
{
	mutex.acquire();
	// the base_state object is updated within the method on_update_from(RobotTask), see implementation above
	this->server->answer(id, base_state);
	mutex.release();
}
