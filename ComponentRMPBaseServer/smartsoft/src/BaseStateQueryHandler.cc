//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
//------------------------------------------------------------------------
//
//  Copyright (C) 2010 Manuel Wopfner
//
//
//        Christian Schlegel (schlegel@hs-ulm.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//  This file is part of the "SmartRMPBaseServer component".
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//--------------------------------------------------------------------------
#include "BaseStateQueryHandler.hh"
#include "ComponentRMPBaseServer.hh"
#include <iostream>

BaseStateQueryHandler::BaseStateQueryHandler(IQueryServer *server)
:	BaseStateQueryHandlerCore(server)
{
	
}


void BaseStateQueryHandler::handleQuery(const Smart::QueryIdPtr &id, const CommBasicObjects::CommVoid& request) 
{
	std::cout << "Query for basestate \n";

	time_stamp.set_now(); // Set the timestamp to the current time

//	base_velocity.set_v(COMP->robot.getV());
//	base_velocity.set_omega_base(COMP->robot.getOmega());
	// TODO: Check if correct
	base_velocity.setVX(COMP->robot.getV());
	base_velocity.setWZ(COMP->robot.getOmega());

	// push the objects CommBasePosition and CommBaseVelocity into the SmartSoft CommBaseState object
	base_state.set_time_stamp(time_stamp);
	base_state.set_base_position(base_position);
	base_state.set_base_position(COMP->robot.getBasePosition());
	base_state.set_base_raw_position(COMP->robot.getBaseRawPosition());
	base_state.set_base_velocity(base_velocity);

	server->answer(id, base_state);
}
