//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//
//  Copyright (C) 2011, 2017 Matthias Lutz, Dennis Stampfer, Matthias Rollenhagen, Nayabrasul Shaik
//  Copyright (C) 2021 Thomas Feldmeier
//
//        schlegel@hs-ulm.de
//
//        Servicerobotic Ulm
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm
//        Germany
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//--------------------------------------------------------------------------

#ifndef _IMAGETASK_HH
#define _IMAGETASK_HH

#include "ImageTaskCore.hh"
#include <DomainVision/CommRGBDImage.hh>
#include <CommBasicObjects/CommPose3d.hh>
#include <CommBasicObjects/CommBaseState.hh>
#include <atomic>
#include <condition_variable>
#include <ctime>

class ImageTask  : public ImageTaskCore
{
private:
    enum Program { prNeutral=1, prQueryOnly=2, prPushImage=3 };
    std::atomic<Program> newProgram {prNeutral}; // indirectly set by another thread (SmartStateChangeHandler)

public:
    bool isQueryImage;
	ImageTask(SmartACE::SmartComponent *comp);
	virtual ~ImageTask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();
    void handleEnterState(const std::string &substate);
    void handleQuitState(const std::string & substate);
};

#endif
