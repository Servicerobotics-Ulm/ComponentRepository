//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "TrafficLightServiceOutWrapper.hh"

// include component's main class
#include "ComponentTrafficLightTest.hh"

// other extensin includes

TrafficLightServiceOutWrapper::TrafficLightServiceOutWrapper(Smart::ISendClientPattern<DomainHMI::CommTrafficLight> *trafficLightServiceOut) {
	this->trafficLightServiceOut = trafficLightServiceOut;
	update_status = Smart::SMART_NODATA;
}

TrafficLightServiceOutWrapper::~TrafficLightServiceOutWrapper() {
}


Smart::StatusCode TrafficLightServiceOutWrapper::send(DomainHMI::CommTrafficLight &trafficLightServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = trafficLightServiceOutDataObject;
	update_status = trafficLightServiceOut->send(trafficLightServiceOutDataObject);
	return update_status;
}

Smart::StatusCode TrafficLightServiceOutWrapper::getLatestUpdate(DomainHMI::CommTrafficLight &trafficLightServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	trafficLightServiceOutDataObject = updateData;
	return update_status;
}
