//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension.hh"

// the ace port-factory is used as a default port-mapping

// statically create a global PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension instance
static PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension extension;

PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension()
:	ComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension("PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension")
{
	productionStationCPXECECC1PN = 0;
	productionStationCPXECECC1PNAutoConnect = false;
	productionStationCPXECECC1PNDeviceURI = "opc.tcp://192.168.0.100";
	productionStationCPXECECC1PNRootObjectPath = "Server/CPX-E-CEC-C1-PN/Resources/Application/Programs/PLC_PRG";
	
}

PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::~PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension()
{  }

void PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::loadParameters(const SmartACE::SmartIniParameter &parameter)
{
	parameter.getBoolean("ProductionStationCPXECECC1PN", "autoConnect", productionStationCPXECECC1PNAutoConnect);
	parameter.getString("ProductionStationCPXECECC1PN", "deviceURI", productionStationCPXECECC1PNDeviceURI);
	parameter.getString("ProductionStationCPXECECC1PN", "rootObjectPath", productionStationCPXECECC1PNRootObjectPath);
}

void PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::initialize(ComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PN *component, int argc, char* argv[])
{
	productionStationCPXECECC1PN = new OPCUA::ProductionStationCPXECECC1PN();
	component->productionStationCPXECECC1PN = productionStationCPXECECC1PN;
}

int PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::onStartup()
{
	if(productionStationCPXECECC1PNAutoConnect == true) {
		// connect OPC/UA DeviceClient ProductionStationCPXECECC1PN
		productionStationCPXECECC1PN->connect(productionStationCPXECECC1PNDeviceURI, productionStationCPXECECC1PNRootObjectPath, false);
	}
	
	
	return startExtensionThread();
}

int PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::extensionExecution()
{
	while(cancelled == false) {
		productionStationCPXECECC1PN->run_once();
	}
	return 0;
}

int PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::onShutdown(const std::chrono::steady_clock::duration &timeoutTime)
{
	// disconnect OPC/UA DeviceClient ProductionStationCPXECECC1PN
	productionStationCPXECECC1PN->disconnect();
	
	
	return stopExtensionThread(timeoutTime);
}

void PlainOpcUaComponentRobotinoConveyerBeltServerOpcuaCPXECECC1PNExtension::destroy()
{
	delete productionStationCPXECECC1PN;
}
