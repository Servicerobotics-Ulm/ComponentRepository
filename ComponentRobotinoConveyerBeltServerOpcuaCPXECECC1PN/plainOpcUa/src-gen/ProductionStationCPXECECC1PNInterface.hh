//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _PRODUCTIONSTATIONCPXECECC1PN_INTERFACE_HH
#define _PRODUCTIONSTATIONCPXECECC1PN_INTERFACE_HH	

#include <string>
#include <OpcUaStatusCode.hh>

/**
 * This is the public C++ interface that needs to be implemented on
 * both sides (the client and the server)
 */
class ProductionStationCPXECECC1PNInterface {
public:
	ProductionStationCPXECECC1PNInterface() {  }
	virtual ~ProductionStationCPXECECC1PNInterface() {  }

	/** XML Specific Getter function for variable BLINKER
	 *
	 *  This function gets BLINKER  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBLINKER(bool &bLINKER) const = 0;
	
	/** XML Specific Setter function for entity BLINKER
	 *
	 *  This function sets BLINKER  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setBLINKER(const bool &value) = 0;
	
	/** XML Specific Getter function for variable LED_GREEN
	 *
	 *  This function gets LED_GREEN  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getLED_GREEN(bool &lED_GREEN) const = 0;
	
	/** XML Specific Setter function for entity LED_GREEN
	 *
	 *  This function sets LED_GREEN  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setLED_GREEN(const bool &value) = 0;
	
	/** XML Specific Getter function for variable LED_RED
	 *
	 *  This function gets LED_RED  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getLED_RED(bool &lED_RED) const = 0;
	
	/** XML Specific Setter function for entity LED_RED
	 *
	 *  This function sets LED_RED  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setLED_RED(const bool &value) = 0;
	
	/** XML Specific Getter function for variable LED_YELLOW
	 *
	 *  This function gets LED_YELLOW  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getLED_YELLOW(bool &lED_YELLOW) const = 0;
	
	/** XML Specific Setter function for entity LED_YELLOW
	 *
	 *  This function sets LED_YELLOW  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setLED_YELLOW(const bool &value) = 0;
	
	/** XML Specific Getter function for variable isBoxPresent
	 *
	 *  This function gets isBoxPresent  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getIsBoxPresent(bool &isBoxPresent) const = 0;
	
	/** XML Specific Setter function for entity isBoxPresent
	 *
	 *  This function sets isBoxPresent  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setIsBoxPresent(const bool &value) = 0;
	
	/** XML Specific Getter function for variable cycles_in_seconds
	 *
	 *  This function gets cycles_in_seconds  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getCycles_in_seconds(int &cycles_in_seconds) const = 0;
	
	/** XML Specific Setter function for entity cycles_in_seconds
	 *
	 *  This function sets cycles_in_seconds  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setCycles_in_seconds(const int &value) = 0;
	
	/** XML Specific Getter function for variable motor_timeout
	 *
	 *  This function gets motor_timeout  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getMotor_timeout(int &motor_timeout) const = 0;
	
	/** XML Specific Setter function for entity motor_timeout
	 *
	 *  This function sets motor_timeout  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setMotor_timeout(const int &value) = 0;
	
	/** XML Specific Getter function for variable result_timeout
	 *
	 *  This function gets result_timeout  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getResult_timeout(int &result_timeout) const = 0;
	
	/** XML Specific Setter function for entity result_timeout
	 *
	 *  This function sets result_timeout  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setResult_timeout(const int &value) = 0;
	
	/** XML Specific Getter function for variable loadbox
	 *
	 *  This function gets loadbox  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getLoadbox(bool &loadbox) const = 0;
	
	/** XML Specific Setter function for entity loadbox
	 *
	 *  This function sets loadbox  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setLoadbox(const bool &value) = 0;
	
	/** XML Specific Getter function for variable start_unloading
	 *
	 *  This function gets start_unloading  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getStart_unloading(bool &start_unloading) const = 0;
	
	/** XML Specific Setter function for entity start_unloading
	 *
	 *  This function sets start_unloading  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setStart_unloading(const bool &value) = 0;
	
	/** XML Specific Getter function for variable stop_unloading
	 *
	 *  This function gets stop_unloading  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getStop_unloading(bool &stop_unloading) const = 0;
	
	/** XML Specific Setter function for entity stop_unloading
	 *
	 *  This function sets stop_unloading  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setStop_unloading(const bool &value) = 0;
	
	/** XML Specific Getter function for variable method_result
	 *
	 *  This function gets method_result  from the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getMethod_result(std::string &method_result) const = 0;
	
	/** XML Specific Setter function for entity method_result
	 *
	 *  This function sets method_result  at the Server
	 *  When class ProductionStationCPXECECC1PN is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *
	 *  @param value			:Value to be set
	 * 
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode setMethod_result(const std::string &value) = 0;
	
};

#endif /* _PRODUCTIONSTATIONCPXECECC1PN_INTERFACE_HH */
