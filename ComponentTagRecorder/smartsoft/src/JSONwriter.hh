//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------
//  Copyright (C) 2020 Nayabrasul Shaik
//
//        nayabrasul.shaik@thu.de
//
//        Christian Schlegel (christian.schlegel@thu.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//-------------------------------------------------------------------------

#ifndef SMARTSOFT_SRC_JSONWRITER_HH_
#define SMARTSOFT_SRC_JSONWRITER_HH_
#include <string>
#include <vector>
#include <sstream>
#include <fstream>
#include <chrono>
#include <ctime>
#include <map>
#include <iomanip>
#include "CommTrackingObjects/CommDetectedMarker.hh"

class JSON_writer {
private:
	std::ofstream json_file;
	std::string filename;
    std::vector<std::string> tags_json_str;
public:
	JSON_writer(std::string directory);
	virtual ~JSON_writer();
	template<typename KT, typename VT>
	std::string set_prop_str(KT key, VT value, bool is_last = false);
	void add_tag_json_str(const CommTrackingObjects::CommDetectedMarker& cMarker);
	void process(const std::map<unsigned int, CommBasicObjects::CommPose3d>& cmean_poses);
	std::string make_tag_json_str();
};

#endif /* SMARTSOFT_SRC_JSONWRITER_HH_ */
