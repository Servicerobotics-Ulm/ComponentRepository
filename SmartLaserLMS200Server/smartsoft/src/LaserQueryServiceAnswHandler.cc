//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "LaserQueryServiceAnswHandler.hh"
#include "SmartLaserLMS200Server.hh"

LaserQueryServiceAnswHandler::LaserQueryServiceAnswHandler(Smart::IQueryServerPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommMobileLaserScan>* server)
:	LaserQueryServiceAnswHandlerCore(server)
{
	
}

LaserQueryServiceAnswHandler::~LaserQueryServiceAnswHandler()
{
	
}

void LaserQueryServiceAnswHandler::on_update_from(const LaserTask* laserTask)
{
	SmartACE::SmartGuard g(mutex);
	laser_scan =  laserTask->getLaserScan();
}

void LaserQueryServiceAnswHandler::handleQuery(const Smart::QueryIdPtr &id, const CommBasicObjects::CommVoid& request)
{
	SmartACE::SmartGuard g(mutex);
	this->server->answer(id, laser_scan);
}
