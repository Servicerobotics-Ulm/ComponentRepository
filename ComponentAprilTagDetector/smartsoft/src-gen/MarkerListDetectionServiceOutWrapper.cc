//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "MarkerListDetectionServiceOutWrapper.hh"

// include component's main class
#include "ComponentAprilTagDetector.hh"

// other extensin includes

MarkerListDetectionServiceOutWrapper::MarkerListDetectionServiceOutWrapper(Smart::IPushServerPattern<CommTrackingObjects::CommDetectedMarkerList> *markerListDetectionServiceOut) {
	this->markerListDetectionServiceOut = markerListDetectionServiceOut;
	update_status = Smart::SMART_NODATA;
}

MarkerListDetectionServiceOutWrapper::~MarkerListDetectionServiceOutWrapper() {
}


Smart::StatusCode MarkerListDetectionServiceOutWrapper::put(CommTrackingObjects::CommDetectedMarkerList &markerListDetectionServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = markerListDetectionServiceOutDataObject;
	update_status = markerListDetectionServiceOut->put(markerListDetectionServiceOutDataObject);
	return update_status;
}

Smart::StatusCode MarkerListDetectionServiceOutWrapper::getLatestUpdate(CommTrackingObjects::CommDetectedMarkerList &markerListDetectionServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	markerListDetectionServiceOutDataObject = updateData;
	return update_status;
}
