//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "GridMapPushServiceOutWrapper.hh"

// include component's main class
#include "ComponentCartographer.hh"

// other extensin includes

GridMapPushServiceOutWrapper::GridMapPushServiceOutWrapper(Smart::IPushServerPattern<CommNavigationObjects::CommGridMap> *gridMapPushServiceOut) {
	this->gridMapPushServiceOut = gridMapPushServiceOut;
	update_status = Smart::SMART_NODATA;
}

GridMapPushServiceOutWrapper::~GridMapPushServiceOutWrapper() {
}


Smart::StatusCode GridMapPushServiceOutWrapper::put(CommNavigationObjects::CommGridMap &gridMapPushServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = gridMapPushServiceOutDataObject;
	update_status = gridMapPushServiceOut->put(gridMapPushServiceOutDataObject);
	return update_status;
}

Smart::StatusCode GridMapPushServiceOutWrapper::getLatestUpdate(CommNavigationObjects::CommGridMap &gridMapPushServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	gridMapPushServiceOutDataObject = updateData;
	return update_status;
}
