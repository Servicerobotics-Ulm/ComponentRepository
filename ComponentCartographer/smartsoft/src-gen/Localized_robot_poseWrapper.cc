//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "Localized_robot_poseWrapper.hh"

// include component's main class
#include "ComponentCartographer.hh"

// other extensin includes

Localized_robot_poseWrapper::Localized_robot_poseWrapper(Smart::ISendClientPattern<CommBasicObjects::CommBasePositionUpdate> *localized_robot_pose) {
	this->localized_robot_pose = localized_robot_pose;
	update_status = Smart::SMART_NODATA;
}

Localized_robot_poseWrapper::~Localized_robot_poseWrapper() {
}


Smart::StatusCode Localized_robot_poseWrapper::send(CommBasicObjects::CommBasePositionUpdate &localized_robot_poseDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = localized_robot_poseDataObject;
	update_status = localized_robot_pose->send(localized_robot_poseDataObject);
	return update_status;
}

Smart::StatusCode Localized_robot_poseWrapper::getLatestUpdate(CommBasicObjects::CommBasePositionUpdate &localized_robot_poseDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	localized_robot_poseDataObject = updateData;
	return update_status;
}
