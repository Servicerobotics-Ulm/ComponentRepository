//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _COMMPOWEROUTPUTSENDOUTWRAPPER_HH
#define _COMMPOWEROUTPUTSENDOUTWRAPPER_HH

#include <mutex>
#include "aceSmartSoft.hh"

// include communication objects
#include <CommRobotinoObjects/CommRobotinoPowerOutputValue.hh>
#include <CommRobotinoObjects/CommRobotinoPowerOutputValueACE.hh>


class CommPowerOutputSendOutWrapper
{
private:
	std::mutex update_mutex;
	Smart::StatusCode update_status;
	
	CommRobotinoObjects::CommRobotinoPowerOutputValue updateData;
	
	Smart::ISendClientPattern<CommRobotinoObjects::CommRobotinoPowerOutputValue> *commPowerOutputSendOut;
	
public:
	CommPowerOutputSendOutWrapper(Smart::ISendClientPattern<CommRobotinoObjects::CommRobotinoPowerOutputValue> *commPowerOutputSendOut);
	virtual ~CommPowerOutputSendOutWrapper();
	
	Smart::StatusCode send(CommRobotinoObjects::CommRobotinoPowerOutputValue &commPowerOutputSendOutDataObject);
	
	Smart::StatusCode getLatestUpdate(CommRobotinoObjects::CommRobotinoPowerOutputValue &commPowerOutputSendOutDataObject);
	
};

#endif // _COMMPOWEROUTPUTSENDOUTWRAPPER_HH
