ComponentRobotinoConveyerBeltServer_OPCUA/BaseURI/value/0=http\://www.servicerobotik-ulm.de
ComponentRobotinoConveyerBeltServer_OPCUA/Homepage/value/3=http\://servicerobotik-ulm.de/components
ComponentRobotinoConveyerBeltServer_OPCUA/MarketName/value/1=ComponentRobotinoConveyerBeltServer_OPCUA
ComponentRobotinoConveyerBeltServer_OPCUA/Purpose/value/4=Example
ComponentRobotinoConveyerBeltServer_OPCUA/Supplier/value/2=Servicerobotics Ulm
ComponentRobotinoConveyerBeltServer_OPCUA/shortDescription=TODO\: add short description for ComponentRobotinoConveyerBeltServer_OPCUA datasheet
ComponentWebotsConveyorBeltOpcua/BaseURI/value/0=http\://www.servicerobotik-ulm.de
ComponentWebotsConveyorBeltOpcua/Homepage/value/3=https\://wiki.servicerobotik-ulm.de/directory\:collection
ComponentWebotsConveyorBeltOpcua/MarketName/value/1=ComponentWebotsConveyorBeltOpcua
ComponentWebotsConveyorBeltOpcua/Purpose/value/4=transfers a stacking container between an mobile robot and an production station by conveyor belts
ComponentWebotsConveyorBeltOpcua/Supplier/value/2=Servicerobotics Ulm
ComponentWebotsConveyorBeltOpcua/shortDescription=\n\nComponentWebotsConveyorBeltOpcua transfers a stacking container (box) between an mobile robot and an production station.\n\nThis component needs [Open62541CppWrapper](https\://github.com/Servicerobotics-Ulm/Open62541CppWrapper) to be installed first.\n\nThere is a demo to see this component in action\: start SystemWebotsNavMpsDockingOPCUA, go to the window with 'ComponentTCLSequencer' and enter a number.\n\nThere are two kinds of production stations\:\n- an active station with an conveyor belt and an OPC UA server for communication\n- an passive station with an roller conveyor\n\nThe movement (docking) of the robot to the production station is done by [ComponentWebotsMpsDocking](../ComponentWebotsMpsDocking).\n\nTransfer commands are given by setting the ComponentMode\:\n- **load** moves the container from an production station to the mobile robot automatically (loads the robot)  \n- **unload** moves the container from the mobile robot to the production station automatically\n- **manualload** is like **load**, but manually\n- **manualunload** is like **unload**, but manually\n- **signalerror** shows an error (see **red** light below)\n\nAutomatic load/unload\:\n- if an box should be loaded but there is already one on top of the mobile robot, send event CONVEYER_BELT_LOAD_ERROR_BOX_ADREADY_PRSESENT and stop with an error\n- if an box should be unloaded but there was no one, send event CONVEYER_BELT_UNLOAD_ERROR_NO_BOX and stop with an error\n- send event CONVEYER_BELT_LOAD_NOT_DONE/CONVEYER_BELT_UNLOAD_NOT_DONE\n- turn on conveyor belt motors\n- if the box is detected at the target position, send event CONVEYER_BELT_LOAD_DONE/CONVEYER_BELT_UNLOAD_DONE and stop with success\n- after too many seconds without success or the production station reported an error, send event CONVEYER_BELT_LOAD_ERROR_NO_BOX_LOADED/CONVEYER_BELT_UNLOAD_ERROR_NO_BOX and stop with an error\n\nMeaning of the signal lights (on the mobile robot or production station)\:\n- **red**\: an error occured, stop all until an human fixed the problem and pressed the enter key in the webots graphics window or the state changed (flashing red light\=SignalError, constant red light\=ManualLoad/ManualUnload)\n- **yellow**\: warning, conveyor belts are turned on to transfer the stacking container\n- **green**\: the stacking container is detected\n\n
eclipse.preferences.version=1
