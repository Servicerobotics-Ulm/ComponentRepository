//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------


//--------------------------------------------------------------------------
//BSD 3-Clause License
//
//  Copyright (C) Servicerobotics Ulm
//  University of Applied Sciences Ulm
//  Prittwitzstr. 10
//  89075 Ulm
//  Germany
//  All rights reserved.
//
//  Author: Nayabrasul Shaik
//
//Redistribution and use in source and binary forms, with or without
//modification, are permitted provided that the following conditions are met:
//
//* Redistributions of source code must retain the above copyright notice, this
//  list of conditions and the following disclaimer.
//
//* Redistributions in binary form must reproduce the above copyright notice,
//  this list of conditions and the following disclaimer in the documentation
//  and/or other materials provided with the distribution.
//
//* Neither the name of the copyright holder nor the names of its
//  contributors may be used to endorse or promote products derived from
//  this software without specific prior written permission.
//
//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
//OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//--------------------------------------------------------------------------


#ifndef SMARTSOFT_SRC_COMPONENTLISTMODEL_HH_
#define SMARTSOFT_SRC_COMPONENTLISTMODEL_HH_

#include <Component.hh>
#include <QObject>
#include <QAbstractListModel>
#include <QHash>
#include <QString>
#include "aceSmartSoft.hh"
#include <string.h>

class ComponentListModel : public QAbstractListModel{
	Q_OBJECT
public:
	ComponentListModel(SmartACE::StateMaster *stateMaster, SmartACE::ParameterMaster *paramMaster,QObject* parent = 0);
	virtual ~ComponentListModel();

	int rowCount(const QModelIndex& parent = QModelIndex()) const override;
	QVariant data(const QModelIndex& index, int role = Qt::DisplayRole) const override;
	bool setData(const QModelIndex& index, const QVariant& value, int role) override;
	Q_INVOKABLE bool removeRows(int row, int count, const QModelIndex& parent = QModelIndex()) override;
	QHash<int, QByteArray> roleNames() const override;
	Q_INVOKABLE bool set_state(QString comp, QString state);
	Q_INVOKABLE bool send_parameter_request(QString comp, QString parameterString);
	SmartACE::CommParameterRequest lispParamToParameterRequest(std::string lispString);
	uint8_t get_component_index(std::vector<Component>& comps, std::string& component_name);

	std::vector<Component> mComponents;
	bool isIndexValid(const QModelIndex& index) const;
	Q_INVOKABLE bool refresh();
	Q_INVOKABLE int size();
	void sort_components();

	enum Roles{
		ComponentNameRole= Qt::UserRole + 1,
		ComponentCurrentStateRole,
		ComponentStateListRole,
		ComponentHasParameterSlave
	};
	SmartACE::StateMaster *mstateMaster;
	SmartACE::ParameterMaster *mparamMaster;
};

#endif /* SMARTSOFT_SRC_COMPONENTLISTMODEL_HH_ */
