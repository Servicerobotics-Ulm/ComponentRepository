//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef COMPONENTROBOTINOLASERSERVER_PORTFACTORYINTERFACE_HH_
#define COMPONENTROBOTINOLASERSERVER_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <CommBasicObjects/CommBaseState.hh>
#include <CommBasicObjects/CommBaseStateACE.hh>
#include <CommBasicObjects/CommLaserSafetyEventParam.hh>
#include <CommBasicObjects/CommLaserSafetyEventParamACE.hh>
#include <CommBasicObjects/CommLaserSafetyEventState.hh>
#include <CommBasicObjects/CommLaserSafetyEventStateACE.hh>
#include <CommBasicObjects/CommLaserSafetyField.hh>
#include <CommBasicObjects/CommLaserSafetyFieldACE.hh>
#include <CommBasicObjects/CommMobileLaserScan.hh>
#include <CommBasicObjects/CommMobileLaserScanACE.hh>
#include <CommBasicObjects/CommVoid.hh>
#include <CommBasicObjects/CommVoidACE.hh>

#include <chrono>

// include component's main class
#include "ComponentRobotinoLaserServer.hh"

// forward declaration
class ComponentRobotinoLaserServer;

class ComponentRobotinoLaserServerPortFactoryInterface {
public:
	ComponentRobotinoLaserServerPortFactoryInterface() { };
	virtual ~ComponentRobotinoLaserServerPortFactoryInterface() { };

	virtual void initialize(ComponentRobotinoLaserServer *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::IPushClientPattern<CommBasicObjects::CommBaseState> * createBaseTimedClient() = 0;
	
	virtual Smart::IPushServerPattern<CommBasicObjects::CommMobileLaserScan> * createPushNewestServer(const std::string &serviceName) = 0;
	virtual Smart::IQueryServerPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommMobileLaserScan> * createQueryServer(const std::string &serviceName) = 0;
	virtual Smart::IEventServerPattern<CommBasicObjects::CommLaserSafetyEventParam, CommBasicObjects::CommLaserSafetyField, CommBasicObjects::CommLaserSafetyEventState> * createSafetyfieldEventServer(const std::string &serviceName, std::shared_ptr<Smart::IEventTestHandler<CommBasicObjects::CommLaserSafetyEventParam, CommBasicObjects::CommLaserSafetyField, CommBasicObjects::CommLaserSafetyEventState>> safetyfieldEventServerEventTestHandler) = 0;

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* COMPONENTROBOTINOLASERSERVER_PORTFACTORYINTERFACE_HH_ */
