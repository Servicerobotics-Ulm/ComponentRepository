//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "LaserQueryServerHandler.hh"
#include "ComponentLaserHokuyoURGServer.hh"

LaserQueryServerHandler::LaserQueryServerHandler(Smart::IQueryServerPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommMobileLaserScan>* server)
:	LaserQueryServerHandlerCore(server)
{

}

LaserQueryServerHandler::~LaserQueryServerHandler()
{

}


void LaserQueryServerHandler::handleQuery(const Smart::QueryIdPtr &id, const CommBasicObjects::CommVoid& request)
{
	CommBasicObjects::CommMobileLaserScan answer;

	//	if (COMP->smartStateSlave->tryAcquire("query_only") == CHS::SMART_OK) {
	//		if (COMP->getGlobalState().getScanner().getVerbose())
	//			std::cout << "read new laser data with query_only\n";
	//
	//		CommBasicObjects::CommMobileLaserScan scan;
	//		ParameterStateStruct localState = COMP->getGlobalState();
	//		COMP->laserTask->accquireNewScan(scan,localState);
	//		server.answer(id, scan);
	//		COMP->smartStateSlave->release("query_only");
	//	} else if(COMP->smartStateSlave->tryAcquire("active") == CHS::SMART_OK) {
			if (COMP->getGlobalState().getScanner().getVerbose())
				std::cout << "read new laser data\n";

			// return scan
			SmartACE::SmartGuard guard(COMP->ScanLock);
			this->server->answer(id, COMP->global_scan);
			guard.release();
			//COMP->smartStateSlave->release("active");
	//	} else { //neutral
	//		CommBasicObjects::CommMobileLaserScan scan;
	//		scan.set_scan_valid(false);
	//		server.answer(id, scan);
	//	}
	
}
