#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain
# The SmartSoft Toolchain has been developed by:
#  
# Service Robotics Research Center
# University of Applied Sciences Ulm
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# www.servicerobotik-ulm.de
#
# This file is generated once. Modify this file to your needs. 
# If you want the toolchain to re-generate this file, please 
# delete it before running the code generator.
#--------------------------------------------------------------------------

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)


#Check if C++11 is supported on the machine or not
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

OPTION(WITH_PCL_VISUALIZATION " Display PCL Visualization" OFF)


IF(WITH_PCL_VISUALIZATION)
	add_definitions(-DWITH_PCL_VISUALIZATION)
ENDIF(WITH_PCL_VISUALIZATION)

# find the SmartSoft CMake Macros (version 2 that uses CMake v3)
FIND_FILE(SMART_MACROS SmartMacros2.cmake PATHS $ENV{SMART_ROOT_ACE}/CMakeMacros /opt/smartSoftAce/CMakeMacros/)
INCLUDE(${SMART_MACROS})

# Create and configure a CMake project for a CommunicationObject
SMART_COMPONENT_PROJECT()

# find SmartSoft package
FIND_PACKAGE(Armadillo 1.0.0)

FIND_PACKAGE( MRPT REQUIRED)
GET_PROPERTY(MRPT_INCLUDE_DIRS DIRECTORY PROPERTY INCLUDE_DIRECTORIES)
IF(MRPT_VERSION VERSION_GREATER 2.0.0)
  FIND_PACKAGE( MRPT REQUIRED maps bayes)
  add_definitions(-DWITH_MRPT_2_0_VERSION)
ELSEIF(MRPT_VERSION VERSION_GREATER 1.5.0)
  FIND_PACKAGE( MRPT REQUIRED base maps bayes)
  add_definitions(-DWITH_MRPT_1_5_VERSION)
ELSEIF(MRPT_VERSION VERSION_LESS 1.3.0)
  FIND_PACKAGE( MRPT REQUIRED base maps bayes)
  add_definitions(-DWITH_OLD_MRPT_VERSION)
ELSE()
  FIND_PACKAGE( MRPT REQUIRED base maps bayes)
ENDIF()

find_package(PCL REQUIRED )
MESSAGE("PCL_VERSION: ${PCL_VERSION}")
add_definitions(${PCL_DEFINITIONS})

set(PCL_LIBRARIES_NEW ${PCL_LIBRARIES})
LIST(REMOVE_ITEM PCL_LIBRARIES_NEW "vtkproj4")



#FIND_SMARTSOFT(3.0)
#FIXME: generalize this
FIND_PACKAGE(AceSmartSoft PATHS $ENV{SMART_ROOT_ACE})

# generte doxygen documentation
SMART_COMPONENT_GENERATE_DOC()

# automatically build CommunicationObject dependencies
SMART_COMPONENT_AUTOBUILD_DEPENDENCIES()

#################################################################################
## here you can put all your project-specific compiler configurations          ##
## using regular CMake commands (like FIND_PACKAGE, INCLUDE_DIRECTORIES, etc.) ##

# you can add additional external libraries using regular CMake commands, e.g.:
#FIND_PACKAGE(<SomePackageName>)

INCLUDE(${CMAKE_CURRENT_LIST_DIR}/src-gen/MixedPortIncludes.cmake)

# these are the regular includes (add your own includes, if needed)
INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_LIST_DIR}/src
  ${CMAKE_CURRENT_LIST_DIR}/src-gen
  ${CMAKE_CURRENT_LIST_DIR}/src-gen/params
  ${MRPT_INCLUDE_DIRS}
  ${ARMADILLO_INCLUDE_DIRS}
  ${OpenCV_INCLUDE_DIRS}
  ${PCL_INCLUDE_DIRS}
)

# collect the toolchain-generated source-files
FILE(GLOB_RECURSE SRC ${CMAKE_CURRENT_LIST_DIR}/src/*.cc)
FILE(GLOB_RECURSE SRC_GEN ${CMAKE_CURRENT_LIST_DIR}/src-gen/*.cc)
FILE(GLOB_RECURSE SRC_GEN_PARAMS ${CMAKE_CURRENT_LIST_DIR}/src-gen/params/*.cc)

# collect your own (local) source-files here (if needed)
#FILE(GLOB_RECURSE USER_SRC ${CMAKE_CURRENT_LIST_DIR}/src/<your-sources>)

# create the executable using collected source-files
ADD_EXECUTABLE(${PROJECT_NAME} ${SRC} ${SRC_GEN} ${SRC_GEN_PARAMS} ${FURTHER_SRCS}) # add ${USER_SRC} (if needed)

# link your external libraries here (if there are any)
TARGET_LINK_LIBRARIES( ${PROJECT_NAME} ${PCL_LIBRARIES_NEW} ${MRPT_LIBS} ${ARMADILLO_LIBRARIES})

INCLUDE(${CMAKE_CURRENT_LIST_DIR}/src-gen/MixedPortTargetConfigs.cmake)

#INSTALL(FILES ${PROJECT_SOURCE_DIR}/src-gen/${PROJECT_NAME}.ini.template DESTINATION etc)

## end user-code                                                               ##
#################################################################################

# SmartSoftKernel is one of the default dependencies for each component
TARGET_LINK_LIBRARIES(${PROJECT_NAME} AceSmartSoftKernel)

# automatically link to all dependent CommunicationObjects
SMART_COMPONENT_AUTOLINK_DEPENDENCIES()

# automatically install the component target
SMART_COMPONENT_AUTOINSTALL()
