//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
//
//  Copyright (C) 2013 Matthias Lutz
//
//        schlegel@hs-ulm.de
//
//        ZAFH Servicerobotic Ulm
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm
//        Germany
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//--------------------------------------------------------------------------
#ifndef _SMARTFESTOFLEETCOMCORE_HH
#define _SMARTFESTOFLEETCOMCORE_HH
	
#include "aceSmartSoft.hh"
#include <iostream>

#include "Communication.hh"

#include "CommBasicObjects/CommBaseState.hh"
#include "CommBasicObjects/CommIOValues.hh"

class SmartFestoFleetComCore
{
private:

public:
	SmartFestoFleetComCore();

	Communication com;
	SmartACE::SmartMutex writeComLock;

	std::string statusData;
	std::string jobProgress;
	SmartACE::SmartMutex statusDataLock;


	struct RobotConnetions{
		std::string robotName;
		std::string baseComponentName;
		std::string baseServiceName;
		std::string baseriOQueryServerName;
		std::string laserComponentName;
		std::string laserServiceName;
		std::string pathNavClientComponentName;
		std::string pathNavClientServiceName;
	};

	SmartACE::SmartRecursiveMutex portsLock;
	std::map<std::string, RobotConnetions> robotConnectionMap;
	std::map< std::string, Smart::IPushClientPattern<CommBasicObjects::CommBaseState> * > basePorts;
	std::map< std::string, Smart::IQueryClientPattern<CommBasicObjects::CommIOValues,CommBasicObjects::CommIOValues> * > baseIOPorts;

};
	
#endif
