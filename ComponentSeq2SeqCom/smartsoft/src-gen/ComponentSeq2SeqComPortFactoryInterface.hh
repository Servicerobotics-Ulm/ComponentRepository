//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef COMPONENTSEQ2SEQCOM_PORTFACTORYINTERFACE_HH_
#define COMPONENTSEQ2SEQCOM_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <CommBasicObjects/CommTaskEventState.hh>
#include <CommBasicObjects/CommTaskEventStateACE.hh>
#include <CommBasicObjects/CommTaskMessage.hh>
#include <CommBasicObjects/CommTaskMessageACE.hh>

#include <chrono>

// include component's main class
#include "ComponentSeq2SeqCom.hh"

// forward declaration
class ComponentSeq2SeqCom;

class ComponentSeq2SeqComPortFactoryInterface {
public:
	ComponentSeq2SeqComPortFactoryInterface() { };
	virtual ~ComponentSeq2SeqComPortFactoryInterface() { };

	virtual void initialize(ComponentSeq2SeqCom *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::ISendClientPattern<CommBasicObjects::CommTaskMessage> * createTaskSendOut() = 0;
	
	virtual Smart::IEventServerPattern<CommBasicObjects::CommTaskMessage, CommBasicObjects::CommTaskMessage, CommBasicObjects::CommTaskEventState> * createTaskEventOut(const std::string &serviceName, std::shared_ptr<Smart::IEventTestHandler<CommBasicObjects::CommTaskMessage, CommBasicObjects::CommTaskMessage, CommBasicObjects::CommTaskEventState>> taskEventOutEventTestHandler) = 0;
	virtual Smart::ISendServerPattern<CommBasicObjects::CommTaskMessage> * createTaskSendIn(const std::string &serviceName) = 0;

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* COMPONENTSEQ2SEQCOM_PORTFACTORYINTERFACE_HH_ */
