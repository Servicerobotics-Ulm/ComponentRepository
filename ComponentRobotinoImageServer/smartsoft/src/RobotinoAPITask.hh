//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
//  Copyright (C) 2010 Matthias Lutz
//
//        Christian Schlegel (schlegel@hs-ulm.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//-------------------------------------------------------------------------
#ifndef _ROBOTINOAPITASK_HH
#define _ROBOTINOAPITASK_HH

#include "RobotinoAPITaskCore.hh"
#include <rec/robotino/api2/all.h>

#include "DomainVision/CommVideoImage.hh"

class MyCom : public rec::robotino::api2::Com
{
public:
        MyCom()
                : Com( "example_camera" )
        {
        }

        void errorEvent( const char* errorString )
        {
                std::cerr << "Error: " << errorString << std::endl;
        }

        void connectedEvent()
        {
                std::cout << "Connected." << std::endl;
        }

        void connectionClosedEvent()
        {
                std::cout << "Connection closed." << std::endl;
        }

        void logEvent( const char* message, int level )
        {
                std::cout << message << std::endl;
        }

        void pingEvent( float timeMs )
        {
                std::cout << "Ping: " << timeMs << "ms" << std::endl;
        }
};

class RobotinoAPITask  : public RobotinoAPITaskCore, public rec::robotino::api2::Camera
{
private:
public:
	RobotinoAPITask(SmartACE::SmartComponent *comp);
	virtual ~RobotinoAPITask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();

	DomainVision::CommVideoImage getImage();
	bool startCaptureMode();
	bool stopCaptureMode();

private:

	bool debug_enabled;

	bool aborted_get_image;
	MyCom com;
	DomainVision::CommVideoImage image;
	SmartACE::SmartConditionMutex cv;
	SmartACE::SmartMutex lock;

	unsigned long int _seq_counter;

	void imageReceivedEvent( const unsigned char* data, unsigned int dataSize, unsigned int width, unsigned int height, unsigned int step );
};

#endif
