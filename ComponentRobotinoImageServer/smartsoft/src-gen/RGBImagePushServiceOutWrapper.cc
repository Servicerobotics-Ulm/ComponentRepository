//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "RGBImagePushServiceOutWrapper.hh"

// include component's main class
#include "ComponentRobotinoImageServer.hh"

// other extensin includes

RGBImagePushServiceOutWrapper::RGBImagePushServiceOutWrapper(Smart::IPushServerPattern<DomainVision::CommVideoImage> *rGBImagePushServiceOut) {
	this->rGBImagePushServiceOut = rGBImagePushServiceOut;
	update_status = Smart::SMART_NODATA;
}

RGBImagePushServiceOutWrapper::~RGBImagePushServiceOutWrapper() {
}


Smart::StatusCode RGBImagePushServiceOutWrapper::put(DomainVision::CommVideoImage &rGBImagePushServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = rGBImagePushServiceOutDataObject;
	update_status = rGBImagePushServiceOut->put(rGBImagePushServiceOutDataObject);
	return update_status;
}

Smart::StatusCode RGBImagePushServiceOutWrapper::getLatestUpdate(DomainVision::CommVideoImage &rGBImagePushServiceOutDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	rGBImagePushServiceOutDataObject = updateData;
	return update_status;
}
