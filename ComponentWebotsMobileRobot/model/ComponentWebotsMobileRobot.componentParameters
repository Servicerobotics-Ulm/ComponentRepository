ComponentParameter ComponentWebotsMobileRobotParams component ComponentWebotsMobileRobot 
{
  InternalParameter OdometryRandomError{
    //@doc"e.g. 0.05m * 0.05m / 1m = 0.0025 m (after traveling 1m, distance error has standard deviation of 0.05m)"           
    varianceOfDistancePerMeter: Double = 0.0025
    //@doc"e.g. (5°*5°)/360° /180°*pi = 0.001212 (after rotating 360 degrees, heading error has standard deviation of 5 degrees)"
    varianceOfHeadingPerRadians: Double = 0.001212
    //@doc"e.g. (2°/180°*pi)^2/1m  = 0.06981 (after traveling 1m, heading error has standard deviation of 5 degrees)"
    varianceOfHeadingPerMeter: Double = 0.001218
  }    
  InternalParameter Webots {
      robotName : String = "Robotino 3"
      motorName : String[] = ["wheel0_joint", "wheel1_joint", "wheel2_joint"]
      radius : Double[] = [0.063, 0.063, 0.063]
      distanceToRobotCentre : Double[] = [-0.1826, -0.1826, -0.1826]
      heading : Double[] = [90.0, 210.0, 330.0]
      maxAcceleration : Double[] = [10.0, 6.0, 40.0]
  }
	InternalParameter Robot {
		//@doc"Set maximum translation velocity of robotino's omnidrive in x direction [mm/s]."
		maxVelX :  Double = 1.0
		
		//@doc"Not yet implemented. (Set maximum translation velocity of robotino's omnidrive in y direction [mm/s]."
		maxVelY : Double = 1.0
		
		//@doc"Set maximum rotation velocity of robot [rad/s]."
		maxRotVel : Double = 4.0
		
		//@doc"IP-adress of the robotino daemon. Depends on where the component is executed. Execution on robotino requires the host name IP."
		daemonIP: String = "127.0.0.1"	
	}
	
	InternalParameter Bumper{
		bumperTimeOutSec : Int32 = 10
		bumperTimeOutMSec : Int32 = 0		
	}
	
	InternalParameter LaserSafetyField{
		generateLaserSafetyFieldEvents : Boolean = false
		laserSafetyfFieldTimeOutSec : Int32 = 10
		laserSafetyfFieldTimeOutMSec : Int32 = 0		
	}
	
	InternalParameter General {
		verbose: Boolean = false
		hasSignalState : Boolean = true
		useLocalizationEvent : Boolean = true
		
		poseFileName : String = "/tmp/lastRobotPose.txt"
		writePoseFile:Boolean = false
	}
	ParameterSetInstance  CommBasicObjects.BaseParams   {
		//@doc"Reset the connection to the base at runtime. The TCP connection is closed and reopened. All estimated positions are set to zero."
		TriggerInstance BASE_RESET passive
		TriggerInstance BASE_SONAR passive
		TriggerInstance SIGNAL_STATE_BUSY passive
		TriggerInstance SIGNAL_STATE_ERROR passive
		TriggerInstance SIGNAL_STATE_IDLE passive
		TriggerInstance SIGNAL_STATE_LOCALIZATION_ERROR passive
		TriggerInstance SIGNAL_STATE_SAFETY_FIELD passive
	}
	
	ExtendedTrigger SET_RELAY passive {
		number  :  UInt32
		value : Boolean 
	}

}
