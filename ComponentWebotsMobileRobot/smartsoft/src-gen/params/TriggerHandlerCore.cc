//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "TriggerHandlerCore.hh"


//
// trigger internal handler methods
//

	// handle BASE_RESET
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_BASE_RESETCore()
	{
		this->handleCommBasicObjects_BaseParams_BASE_RESET();
	}

	// handle BASE_SONAR
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_BASE_SONARCore()
	{
		this->handleCommBasicObjects_BaseParams_BASE_SONAR();
	}

	// handle SIGNAL_STATE_BUSY
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_SIGNAL_STATE_BUSYCore()
	{
		this->handleCommBasicObjects_BaseParams_SIGNAL_STATE_BUSY();
	}

	// handle SIGNAL_STATE_ERROR
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_SIGNAL_STATE_ERRORCore()
	{
		this->handleCommBasicObjects_BaseParams_SIGNAL_STATE_ERROR();
	}

	// handle SIGNAL_STATE_IDLE
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_SIGNAL_STATE_IDLECore()
	{
		this->handleCommBasicObjects_BaseParams_SIGNAL_STATE_IDLE();
	}

	// handle SIGNAL_STATE_LOCALIZATION_ERROR
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_SIGNAL_STATE_LOCALIZATION_ERRORCore()
	{
		this->handleCommBasicObjects_BaseParams_SIGNAL_STATE_LOCALIZATION_ERROR();
	}

	// handle SIGNAL_STATE_SAFETY_FIELD
	void TriggerHandlerCore::handleCommBasicObjects_BaseParams_SIGNAL_STATE_SAFETY_FIELDCore()
	{
		this->handleCommBasicObjects_BaseParams_SIGNAL_STATE_SAFETY_FIELD();
	}

//
// extended trigger internal handler methods
//

		// handle SET_RELAY
		void TriggerHandlerCore::handleSET_RELAYCore(const unsigned int &number, const bool &value)
		{
			this->handleSET_RELAY(number, value);
		}
