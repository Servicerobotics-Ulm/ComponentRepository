//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#ifndef _PARAMETERSTATESTRUCT_HH
#define _PARAMETERSTATESTRUCT_HH

#include "ParameterStateStructCore.hh"

class ParameterStateStruct: public ParameterStateStructCore
{
public:
	ParameterStateStruct() {  }
	virtual ~ParameterStateStruct() {  }
	
	// implement this method to check whether the incoming parameters
	// provided by the commit state are consistent, in case the ParameterResponseType
	// is not OK, the commit parameter is NOT copied into the global state.
	// HINT: avoid using blocking calls from within this handler, use Triggers for that instead.
	virtual SmartACE::ParamResponseType handleCOMMIT(const ParameterStateStruct &commitState);
	
	// define your own getter methods here
	// (to provide conversion functions and/or more convenient getter methods)
	// these own getter methods will be accessible through "COMP->getGlobalState().yourOwnMethod()"
	// inside of your methods use the getter methods from the parent class ParameterStateStructCore
	// (they provide parameter values from the global state only, which are available after the last commit)
};

inline std::ostream &operator<<(std::ostream &os, const ParameterStateStruct &pss)
{
	pss.to_ostream(os);
	return os;
}

#endif
