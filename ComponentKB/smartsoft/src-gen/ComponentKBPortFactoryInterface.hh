//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef COMPONENTKB_PORTFACTORYINTERFACE_HH_
#define COMPONENTKB_PORTFACTORYINTERFACE_HH_

// include communication objects
#include <CommBasicObjects/CommKBEventParam.hh>
#include <CommBasicObjects/CommKBEventParamACE.hh>
#include <CommBasicObjects/CommKBEventResult.hh>
#include <CommBasicObjects/CommKBEventResultACE.hh>
#include <CommBasicObjects/CommKBRequest.hh>
#include <CommBasicObjects/CommKBRequestACE.hh>
#include <CommBasicObjects/CommKBResponse.hh>
#include <CommBasicObjects/CommKBResponseACE.hh>
#include <CommBasicObjects/CommVoid.hh>
#include <CommBasicObjects/CommVoidACE.hh>

#include <chrono>

// include component's main class
#include "ComponentKB.hh"

// forward declaration
class ComponentKB;

class ComponentKBPortFactoryInterface {
public:
	ComponentKBPortFactoryInterface() { };
	virtual ~ComponentKBPortFactoryInterface() { };

	virtual void initialize(ComponentKB *component, int argc, char* argv[]) = 0;
	virtual int onStartup() = 0;

	virtual Smart::IEventClientPattern<CommBasicObjects::CommKBEventParam, CommBasicObjects::CommKBEventResult> * createKbChainedEntriesEventClient() = 0;
	
	virtual Smart::IEventServerPattern<CommBasicObjects::CommKBEventParam, CommBasicObjects::CommKBEventResult, CommBasicObjects::CommVoid> * createKbEventServer(const std::string &serviceName, std::shared_ptr<Smart::IEventTestHandler<CommBasicObjects::CommKBEventParam, CommBasicObjects::CommKBEventResult, CommBasicObjects::CommVoid>> kbEventServerEventTestHandler) = 0;
	virtual Smart::IQueryServerPattern<CommBasicObjects::CommKBRequest, CommBasicObjects::CommKBResponse> * createKbQuery(const std::string &serviceName) = 0;

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) = 0;
	virtual void destroy() = 0;
};

#endif /* COMPONENTKB_PORTFACTORYINTERFACE_HH_ */
