//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#include "ManipulatorEventServiceOutEventTestHandler.hh"

bool ManipulatorEventServiceOutEventTestHandler::testEvent(
	CommManipulatorObjects::CommManipulatorEventParameter &p,
	CommManipulatorObjects::CommManipulatorEventResult &r,
	const CommManipulatorObjects::CommManipulatorEventState &s
) throw() {

	std::cout << "testEvent handler" << std::endl;

	bool result = false;

	CommManipulatorObjects::ManipulatorEvent oldState, newState;

	oldState = p.get_event();
	newState = s.getEvent();

	if (oldState == newState)
	{
		// no state change --> no event
		result = false;
	} else
	{

		std::cout << "[EventTestHandler] SEND Event: " << newState.to_string() << std::endl;

		// memorize new state (state change) for currently tested event
		// each activated event has its own parameter
		p.set_event(newState);
		// set result
		r.set_event(newState);
		result = true;
	}

	// true --> send event
	// false --> don't send event
   	return result;
}
