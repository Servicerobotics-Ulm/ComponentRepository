//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _TRIGGERHANDLER_HH
#define _TRIGGERHANDLER_HH

#include "TriggerHandlerCore.hh"

class TriggerHandler: public TriggerHandlerCore 
{
public:
	TriggerHandler() {  }
	virtual ~TriggerHandler() {  }
	
	// trigger user methods
	virtual void handleCommManipulatorObjects_ManipulatorParameter_CLEAR_PCS();
	virtual void handleCommManipulatorObjects_ManipulatorParameter_LOAD_PROGRAM(const std::string &name);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_MOVE_CIRCULAR(const double &viaX, const double &viaY, const double &viaZ, const double &viaRX, const double &viaRY, const double &viaRZ, const double &goalX, const double &goalY, const double &goalZ, const double &goalRX, const double &goalRY, const double &goalRZ, const double &acc, const double &speed);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_MOVE_LINEAR(const double &goalX, const double &goalY, const double &goalZ, const double &goalRX, const double &goalRY, const double &goalRZ, const double &acc, const double &speed);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_MOVE_PATH(const std::string &pathID, const bool &overwriteSpeed, const double &acc, const double &speed);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_SET_PCS(const double &x, const double &y, const double &z, const double &rX, const double &rY, const double &rZ);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_SET_TCP(const double &x, const double &y, const double &z, const double &rX, const double &rY, const double &rZ);
	virtual void handleCommManipulatorObjects_ManipulatorParameter_START_PROGRAM();
};

#endif // _TRIGGERHANDLER_HH
