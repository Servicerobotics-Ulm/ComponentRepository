//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "PosePushServerWrapper.hh"

// include component's main class
#include "ComponentWebotsRobotArm.hh"

// other extensin includes

PosePushServerWrapper::PosePushServerWrapper(Smart::IPushServerPattern<CommManipulatorObjects::CommMobileManipulatorState> *posePushServer) {
	this->posePushServer = posePushServer;
	update_status = Smart::SMART_NODATA;
}

PosePushServerWrapper::~PosePushServerWrapper() {
}


Smart::StatusCode PosePushServerWrapper::put(CommManipulatorObjects::CommMobileManipulatorState &posePushServerDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = posePushServerDataObject;
	update_status = posePushServer->put(posePushServerDataObject);
	return update_status;
}

Smart::StatusCode PosePushServerWrapper::getLatestUpdate(CommManipulatorObjects::CommMobileManipulatorState &posePushServerDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	posePushServerDataObject = updateData;
	return update_status;
}
