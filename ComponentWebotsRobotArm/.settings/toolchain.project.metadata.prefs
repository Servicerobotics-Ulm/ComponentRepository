ComponentWebotsRobotArm/BaseURI/value/0=http\://www.servicerobotik-ulm.de
ComponentWebotsRobotArm/Homepage/value/3=https\://wiki.servicerobotik-ulm.de/directory\:collection
ComponentWebotsRobotArm/MarketName/value/1=ComponentWebotsRobotArm
ComponentWebotsRobotArm/Purpose/value/4=The robot arm UR5e in the webots simulator.
ComponentWebotsRobotArm/Supplier/value/2=Servicerobotics Ulm
ComponentWebotsRobotArm/shortDescription=\n\nA robot arm (manipulator) in the webots simulator.\n\nThis component needs [OpenRave todo\:add link to install instructions]() to be installed first.\n\n\#\#\# Example program\:\n\nSet the joint angels of the [robot arm](https\://cyberbotics.com/doc/guide/ure). \n\n```\nCommManipulatorObjects\:\:CommManipulatorTrajectory trajectory;\n// do these calls in this order only\n// 1. set JOINT_ANGLES\ntrajectory.setFlag(CommManipulatorObjects\:\:ManipulatorTrajectoryFlag\:\:JOINT_ANGLES);\n// 2. set number of points in trajectory\ntrajectory.set_trajectory_size(1);\n// 3. set number of values of each point in the trajectory. must be 6 for the UR5e (6 motors)\ntrajectory.set_joint_count(6);\n// 4. set points\:\n// time to move to point 0 is 0.3 seconds\ntrajectory.set_joint_time(0, 0.3);\n// point 0, set all 6 motor rotations [radians]\ntrajectory.set_joint_angle(0, 0, 0.+231);\ntrajectory.set_joint_angle(0, 1, 0.-215);\ntrajectory.set_joint_angle(0, 2, 0.-541);\ntrajectory.set_joint_angle(0, 3, 0.+374);\ntrajectory.set_joint_angle(0, 4, 0.-121);\ntrajectory.set_joint_angle(0, 5, 0.+084);\nCOMP -> sendTrajectoryServiceOut -> send(trajectory);\n```\n\nCoordinate systems of robot arm and vacuum gripper (tool center point)\:\n\![image](CoordinateSystemRobotArm.png)\n\nSet the pose (position and orientation) of the vacuum gripper in the coordinate system of the robot arm.\nThe robot arms 'UR5' or 'UR5e' or 'UR10e' with a vacuum gripper of length 0.11m are supported.\n\nThe orientation of the vacuum gripper's coordinate system is given by three [Euler Angles](https\://web.mit.edu/2.05/www/Handout/HO2.PDF) called azimuth, elevation, roll using zyx convention (1. angle rotates around z-axis, 2. y, 3. x) \n* start with same coordinate system orientation as the robot arm (x/y/z-axis have same direction)\n* rotate around blue z-axis by angle azimuth (in webots, you can click on the blue curved arrow and move the mouse to rotate objects)\n* rotate around green y-axis by angle elevation (the y-axis could have been rotated by azimuth already)\n* rotate around red x-axis by angle roll (the x-axis could have been rotated by azimuth or elevation already)\n\nIn below example, the robot arm coordinate system is copied and rotated around x-axis by -PI/2 (-90 degrees), the new y-axis and the vacuum gripper will point downwards, ready to pick things from above.\n\n```\nCommManipulatorObjects\:\:CommManipulatorTrajectory trajectory;\ntrajectory.setFlag(CommManipulatorObjects\:\:ManipulatorTrajectoryFlag\:\:POSE_TCP);\ndouble x, y, z, azimuth, elevation, roll;\nx \= 0.5; // 0.5m forward relative to robot arm\ny \= 0.3; // 0.3m left\nz \= 0.2; // 0.2m up\nazimuth \= 0.0;\nelevation \= 0.0;\nroll \= -M_PI/2; \ntrajectory.set_pose_TCP_robot(x, y, z, azimuth, elevation, roll, 1);\nCOMP->sendTrajectoryServiceOut->send(trajectory);\n```\n\n\n\#\#\# other similar components\:\n\n- [SmartURServer](../SmartURServer)\n- [SmartURServerLegacy](../SmartURServerLegacy)\n- [SmartGazeboManipulatorServer](../SmartGazeboManipulatorServer)\n\n
ComponentWebotsURServer/BaseURI/value/0=http\://www.servicerobotik-ulm.de
ComponentWebotsURServer/Homepage/value/3=https\://wiki.servicerobotik-ulm.de/directory\:collection
ComponentWebotsURServer/MarketName/value/1=ComponentWebotsURServer
ComponentWebotsURServer/Purpose/value/4=The robot arm UR5e in the webots simulator.
ComponentWebotsURServer/Supplier/value/2=Servicerobotics Ulm
ComponentWebotsURServer/shortDescription=\n\nThe robot arm UR5e in the webots simulator.\n\nThis component needs [OpenRave todo\:add link to install instructions]() to be installed first.\n\n\#\#\# Example program\:\n\n```\nCommManipulatorObjects\:\:CommManipulatorTrajectory trajectory;\n// do these calls in this order only\n// 1. only JOINT_ANGLES is possible, POSE_TCP not\ntrajectory.setFlag(CommManipulatorObjects\:\:ManipulatorTrajectoryFlag\:\:JOINT_ANGLES);\n// 2. set number of points in trajectory\ntrajectory.set_trajectory_size(1);\n// 3. set number of values of each point in the trajectory. must be 6 for the UR5e (6 motors)\ntrajectory.set_joint_count(6);\n// 4. set points\:\n// time to move to point 0 is 0.3 seconds\ntrajectory.set_joint_time(0, 0.3);\n// point 0, set all 6 motor rotations [radians]\ntrajectory.set_joint_angle(0, 0, 0.+231);\ntrajectory.set_joint_angle(0, 1, 0.-215);\ntrajectory.set_joint_angle(0, 2, 0.-541);\ntrajectory.set_joint_angle(0, 3, 0.+374);\ntrajectory.set_joint_angle(0, 4, 0.-121);\ntrajectory.set_joint_angle(0, 5, 0.+084);\nCOMP -> sendTrajectoryServiceOut -> send(trajectory);\n```\n\n\#\#\# other similar components\:\n\n- [SmartURServer](../SmartURServer)\n- [SmartURServerLegacy](../SmartURServerLegacy)\n- [SmartGazeboManipulatorServer](../SmartGazeboManipulatorServer)\n\n
SmartURServer/BaseURI/value/0=http\://www.toolify.eu/TODO
SmartURServer/HardwareRequirement/value/5=The component is able to operate all Universal Robots manipulators (UR3(e),UR5(e),UR10(e),UR16(e)) with a controller software version xxx or newer. The component is further able to work with the simulator provided by Universal Robots.
SmartURServer/Homepage/value/3=TODO
SmartURServer/Purpose/value/4=Driver component for universal robot manipulators
SmartURServer/ShortDescription/value/1=Device driver component for Universal Robots (UR) manipulators
SmartURServer/Supplier/value/2=Toolify Robotics GmbH
eclipse.preferences.version=1
