# baseURI: http://www.servicerobotik-ulm.de/ComponentsAndSystems#ComponentWebotsPTUServer
# imports: http://robmosys.eu/rdf/composition-structures
# imports: http://seronet-projekt.de/models/t2#Navigation

# imports: http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects
# imports: http://www.servicerobotik-ulm.de/DomainModels/DomainPTU

#######################################
# Technical Data Sheet
# for a SeRoNet Software Component as 
# exported by the SmartMDSD Toolchain
#
# erste Zeile des .ttl muss enthalten: "# ComponentID: <id uri>"
# This file will be placed in:
# <componentName>/datasheet-gen/<componentName>.ttl
#######################################

# all generated files use these prefixes
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix t1: <http://seronet-projekt.de/models/t1#> .
@prefix spdx: <http://spdx.org/rdf/terms#> .
@prefix spdx-lic: <http://spdx.org/licenses/> .

@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# TODO past “Durchstich”: exactly identify which elements belong to SeRoNet and which belong to RobMoSys
@prefix robmosys: <http://robmosys.eu/rdf/composition-structures#> .

# these namespaces can be different in generated files
@prefix t3: <http://www.servicerobotik-ulm.de/ComponentsAndSystems#> .

@prefix CommBasicObjects: <http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects#> .
@prefix DomainPTU: <http://www.servicerobotik-ulm.de/DomainModels/DomainPTU#> .

##### Software Component ComponentWebotsPTUServer
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer a robmosys:ComponentDefinition;
	a owl:Ontology ;
	owl:imports <http://robmosys.eu/rdf/composition-structures> ;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/CommBasicObjects> ;
	owl:imports <http://www.servicerobotik-ulm.de/DomainModels/DomainPTU> ;
	
	# Human readable name of this component
	# Equals with the project name
	rdfs:label "ComponentWebotsPTUServer";

	# Abstract. 1-sentence, very brief, description about this component.
	t1:shortDescription "
	
	PTU = Pan Tilt Unit. A camera can be placed on top of the PTU, and the PTU can rotate left/right/up/down to rotate the camera too.
	
	How the PTU is added to an slot of the Larry robot:
	
	```
	Pan {
	  topSlot [
	    Robot {
	      name "PTU"
	      supervisor TRUE
	      controller "<extern>"
	    }
	    DEF PanRotate Transform {
	# rotate by changing this 4. value by supervisor
	      rotation 0 1 0 0
	      children [
	        Tilt {
	          topSlot [
	            DEF TiltRotate Transform {
	# rotate by changing this 4. value by supervisor
	              rotation 0 0 1 0
	              children [
	                Transform {
	                  rotation 0 -1 0 1.5708
	                  children [
	                    kinect_v2 {
	                      controller "<extern>"
	                      supervisor TRUE
	                    }
	                    microphone {
	                    }
	                  ]
	                }
	              ]
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}
	```
	";

	

	# Services this component provides or requires
	# ComponentPort baseStateQueryClient
	t1:requiredService t3:ComponentWebotsPTUServer_baseStateQueryClient;
	# ComponentPort baseStateClient
	t1:requiredService t3:ComponentWebotsPTUServer_baseStateClient;
	# ComponentPort devicePoseStateServer
	t1:providedService t3:ComponentWebotsPTUServer_devicePoseStateServer;
	# ComponentPort goalEventServer
	t1:providedService t3:ComponentWebotsPTUServer_goalEventServer;
	# ComponentPort moveSendServer
	t1:providedService t3:ComponentWebotsPTUServer_moveSendServer;
	# ComponentPort moveQueryServer
	t1:providedService t3:ComponentWebotsPTUServer_moveQueryServer;
	# ComponentPort stateQueryServer
	t1:providedService t3:ComponentWebotsPTUServer_stateQueryServer;
.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_baseStateQueryClient 
	rdf:type CommBasicObjects:BaseStateQueryService ;
	# name of this service definition as from the model
	rdfs:label "baseStateQueryClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_baseStateClient 
	rdf:type CommBasicObjects:BaseStateService ;
	# name of this service definition as from the model
	rdfs:label "baseStateClient";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_devicePoseStateServer 
	rdf:type CommBasicObjects:DevicePoseUpdateService ;
	# name of this service definition as from the model
	rdfs:label "devicePoseStateServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_goalEventServer 
	rdf:type DomainPTU:GoalEventService ;
	# name of this service definition as from the model
	rdfs:label "goalEventServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_moveSendServer 
	rdf:type DomainPTU:MovePTUSendService ;
	# name of this service definition as from the model
	rdfs:label "moveSendServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_moveQueryServer 
	rdf:type DomainPTU:MovePTUQueryService ;
	# name of this service definition as from the model
	rdfs:label "moveQueryServer";


.

# a service definition usage. Here: provided service
# see https://robmosys.eu/wiki/modeling:metamodels:component
t3:ComponentWebotsPTUServer_stateQueryServer 
	rdf:type DomainPTU:PTUStateQueryService ;
	# name of this service definition as from the model
	rdfs:label "stateQueryServer";


.

