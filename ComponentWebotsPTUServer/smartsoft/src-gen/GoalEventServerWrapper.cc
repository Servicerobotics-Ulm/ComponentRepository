//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "GoalEventServerWrapper.hh"

// include component's main class
#include "ComponentWebotsPTUServer.hh"

// other extensin includes

GoalEventServerWrapper::GoalEventServerWrapper(Smart::IEventServerPattern<DomainPTU::CommPTUGoalEventParameter, DomainPTU::CommPTUGoalEventResult, DomainPTU::PTUGoalEventState> *goalEventServer) {
	this->goalEventServer = goalEventServer;
	update_status = Smart::SMART_NODATA;
}

GoalEventServerWrapper::~GoalEventServerWrapper() {
}


Smart::StatusCode GoalEventServerWrapper::put(DomainPTU::PTUGoalEventState &eventState) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateEventState = eventState;
	update_status = goalEventServer->put(eventState);
	return update_status;
}

Smart::StatusCode GoalEventServerWrapper::getLatestUpdate(DomainPTU::PTUGoalEventState &eventState) {
	std::unique_lock<std::mutex> lock(update_mutex);
	eventState = updateEventState;
	return update_status;
}
