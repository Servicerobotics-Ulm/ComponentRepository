//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef COMPONENTWEBOTSPTUSERVER_ACE_PORTFACTORY_HH_
#define COMPONENTWEBOTSPTUSERVER_ACE_PORTFACTORY_HH_

// include ACE/SmartSoft component implementation
#include "ComponentWebotsPTUServerImpl.hh"

// include the main component-definition class
#include "ComponentWebotsPTUServerPortFactoryInterface.hh"

class ComponentWebotsPTUServerAcePortFactory: public ComponentWebotsPTUServerPortFactoryInterface
{
private:
	ComponentWebotsPTUServerImpl *componentImpl;
public:
	ComponentWebotsPTUServerAcePortFactory();
	virtual ~ComponentWebotsPTUServerAcePortFactory();

	virtual void initialize(ComponentWebotsPTUServer *component, int argc, char* argv[]) override;
	virtual int onStartup() override;

	virtual Smart::IPushClientPattern<CommBasicObjects::CommBaseState> * createBaseStateClient() override;
	virtual Smart::IQueryClientPattern<CommBasicObjects::CommVoid, CommBasicObjects::CommBaseState> * createBaseStateQueryClient() override;
	
	virtual Smart::IPushServerPattern<CommBasicObjects::CommDevicePoseState> * createDevicePoseStateServer(const std::string &serviceName) override;
	virtual Smart::IEventServerPattern<DomainPTU::CommPTUGoalEventParameter, DomainPTU::CommPTUGoalEventResult, DomainPTU::PTUGoalEventState> * createGoalEventServer(const std::string &serviceName, std::shared_ptr<Smart::IEventTestHandler<DomainPTU::CommPTUGoalEventParameter, DomainPTU::CommPTUGoalEventResult, DomainPTU::PTUGoalEventState>> goalEventServerEventTestHandler) override;
	virtual Smart::IQueryServerPattern<DomainPTU::CommPTUMoveRequest, DomainPTU::CommPTUMoveResponse> * createMoveQueryServer(const std::string &serviceName) override;
	virtual Smart::ISendServerPattern<DomainPTU::CommPTUMoveRequest> * createMoveSendServer(const std::string &serviceName) override;
	virtual Smart::IQueryServerPattern<CommBasicObjects::CommVoid, DomainPTU::CommMobilePTUState> * createStateQueryServer(const std::string &serviceName) override;
	
	// get a pointer to the internal component implementation
	SmartACE::SmartComponent* getComponentImpl();

	virtual int onShutdown(const std::chrono::steady_clock::duration &timeoutTime=std::chrono::seconds(2)) override;
	virtual void destroy() override;
};

#endif /* COMPONENTWEBOTSPTUSERVER_ACE_PORTFACTORY_HH_ */
