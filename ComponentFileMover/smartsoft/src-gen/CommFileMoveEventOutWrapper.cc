//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "CommFileMoveEventOutWrapper.hh"

// include component's main class
#include "ComponentFileMover.hh"

// other extensin includes

CommFileMoveEventOutWrapper::CommFileMoveEventOutWrapper(Smart::IEventServerPattern<CommBasicObjects::CommFileMoverEventParameter, CommBasicObjects::CommFileMoverEventResult, CommBasicObjects::CommFileMoverEventState> *commFileMoveEventOut) {
	this->commFileMoveEventOut = commFileMoveEventOut;
	update_status = Smart::SMART_NODATA;
}

CommFileMoveEventOutWrapper::~CommFileMoveEventOutWrapper() {
}


Smart::StatusCode CommFileMoveEventOutWrapper::put(CommBasicObjects::CommFileMoverEventState &eventState) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateEventState = eventState;
	update_status = commFileMoveEventOut->put(eventState);
	return update_status;
}

Smart::StatusCode CommFileMoveEventOutWrapper::getLatestUpdate(CommBasicObjects::CommFileMoverEventState &eventState) {
	std::unique_lock<std::mutex> lock(update_mutex);
	eventState = updateEventState;
	return update_status;
}
