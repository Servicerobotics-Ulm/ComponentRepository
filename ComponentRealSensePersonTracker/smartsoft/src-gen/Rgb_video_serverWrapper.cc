//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

// include wrapper header
#include "Rgb_video_serverWrapper.hh"

// include component's main class
#include "ComponentRealSensePersonTracker.hh"

// other extensin includes

Rgb_video_serverWrapper::Rgb_video_serverWrapper(Smart::IPushServerPattern<DomainVision::CommVideoImage> *rgb_video_server) {
	this->rgb_video_server = rgb_video_server;
	update_status = Smart::SMART_NODATA;
}

Rgb_video_serverWrapper::~Rgb_video_serverWrapper() {
}


Smart::StatusCode Rgb_video_serverWrapper::put(DomainVision::CommVideoImage &rgb_video_serverDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	updateData = rgb_video_serverDataObject;
	update_status = rgb_video_server->put(rgb_video_serverDataObject);
	return update_status;
}

Smart::StatusCode Rgb_video_serverWrapper::getLatestUpdate(DomainVision::CommVideoImage &rgb_video_serverDataObject) {
	std::unique_lock<std::mutex> lock(update_mutex);
	rgb_video_serverDataObject = updateData;
	return update_status;
}
