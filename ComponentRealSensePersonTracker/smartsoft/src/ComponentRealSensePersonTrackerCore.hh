//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
// --------------------------------------------------------------------------
//
//  Copyright (C) 2009-2017 Andreas Steck, Matthias Lutz
//
//        lutz@hs-ulm.de
//        shaik@hs-ulm.de
//
//        ZAFH Servicerobotik Ulm
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
#ifndef _COMPONENTREALSENSEPERSONTRACKERCORE_HH
#define _COMPONENTREALSENSEPERSONTRACKERCORE_HH
	
#include "aceSmartSoft.hh"
#include <iostream>
#include <set>
#include <librealsense/rs.hpp>
#include "3rdParty/include/librealsense/pt/person_tracking_video_module_factory.h"
#include "3rdParty/include/librealsense/pt/person_tracking_video_module_interface.h"
#include "3rdParty/include/librealsense/pt/RealSense/PersonTracking/PersonTrackingConfiguration.h"
#include "3rdParty/include/librealsense/pt/RealSense/PersonTracking/PersonTrackingModule.h"
#include "3rdParty/include/librealsense/pt/RealSense/PersonTracking/PersonTrackingData.h"

struct TrackPoint3D
{
	float x,y,z;
};
struct BoundingBox
{
	float x,y,w,h;
};
struct TrackedPerson{
	int realsense_id;
	TrackPoint3D image;
	TrackPoint3D world;
	BoundingBox box;
	bool operator < (const TrackedPerson &other) const { return realsense_id < other.realsense_id; }
};
class ComponentRealSensePersonTrackerCore
{
private:

public:
	ComponentRealSensePersonTrackerCore();
	SmartACE::SmartMutex personLock;
	rs::person_tracking::person_tracking_video_module_interface* ptModule;
	int currently_following_person_Id;
	std::set<TrackedPerson> set_tracked_persons;
	float last_realsense_X, last_realsense_Y; ///< Last known goal position x,y coordinates (in Robot Base frame and in millimeters)
};
	
#endif
